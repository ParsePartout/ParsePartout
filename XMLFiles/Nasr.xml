<article>
	<preamble>Nasr.pdf</preamble>
	<titre>MACAON An NLP Tool Suite for Processing Word Lattices</titre>
	<auteurs>
		<auteur>
			<name>Alexis Nasr</name>
			<mail>alexis.nasr@lif.univ-mrs.fr</mail>
            <affiliation>Laboratoire d'Informatique Fondamentale de Marseille- CNRS - UMR 6166 Universite Aix-Marseille</affiliation>
      </auteur>
		<auteur>
			<name>Frederic Bechet</name>
			<mail>frederic.bechet@lif.univ-mrs.fr</mail>
            <affiliation>Laboratoire d'Informatique Fondamentale de Marseille- CNRS - UMR 6166 Universite Aix-Marseille</affiliation>
      </auteur>
		<auteur>
			<name>Jean-Francois Rey</name>
			<mail>jean-francois.rey@lif.univ-mrs.fr</mail>
            <affiliation>Laboratoire d'Informatique Fondamentale de Marseille- CNRS - UMR 6166 Universite Aix-Marseille</affiliation>
      </auteur>
		<auteur>
			<name>Benoit Favre</name>
			<mail>benoit.favre@lif.univ-mrs.fr</mail>
            <affiliation>Laboratoire d'Informatique Fondamentale de Marseille- CNRS - UMR 6166 Universite Aix-Marseille</affiliation>
      </auteur>
		<auteur>
			<name>Joseph Le Roux</name>
			<mail>joseph.le.roux@lif.univ-mrs.fr</mail>
            <affiliation>Laboratoire d'Informatique Fondamentale de Marseille- CNRS - UMR 6166 Universite Aix-Marseille</affiliation>
      </auteur>
	</auteurs>
	<abstract>MACAON is a tool suite for standard NLP tasks developed for French. MACAON has been designed to process both human-produced text and highly ambiguous word-lattices produced by NLP tools. MACAON is made of several native modules for common tasks such as a tokenization, a part-of-speech tagging or syntactic parsing, all communicating with each other through XML files . In addition, exchange protocols with external tools are easily definable. MACAON is a fast, modular and open tool, distributed under GNU Public License.</abstract>
	<introduction>The automatic processing of textual data generatedby NLP software, resulting from Machine Transla-tion, Automatic Speech Recognition or AutomaticText Summarization, raises new challenges for lan-guage processing tools. Unlike native texts (textsproduced by humans), this new kind of texts is theresult of imperfect processors and they are madeof several hypotheses, usually weighted with con-fidence measures. Automatic text production sys-tems can produce these weighted hypotheses as n-best lists, word lattices, or confusion networks. It iscrucial for this space of ambiguous solutions to bekept for later processing since the ambiguities of thelower levels can sometimes be resolved during high-level processing stages. It is therefore important tobe able to represent this ambiguity.This work has been funded by the French Agence Nationalepour la Recherche, through the projects SEQUOIA (ANR-08-EMER-013) and DECODA (2009-CORD-005-01)MACAON is a suite of tools developped to pro-cess ambiguous input and extend inference of in-put modules within a global scope. It con-sists in several modules that perform classicalNLP tasks (tokenization, word recognition, part-of-speech tagging, lemmatization, morphological anal-ysis, partial or full parsing) on either native textor word lattices. MACAON is distributed underGNU public licence and can be downloaded fromhttp://www.macaon.lif.univ-mrs.fr/.From a general point of view, a MACAON modulecan be seen as an annotation device1 which adds anew level of annotation to its input that generally de-pends on annotations from preceding modules. Themodules communicate through XML files that allowthe representation different layers of annotation aswell as ambiguities at each layer. Moreover, the ini-tial XML structuring of the processed files (logicalstructuring of a document, information from the Au-tomatic Speech Recognition module . . . ) remainsuntouched by the processing stages.As already mentioned, one of the main charac-teristics of MACAON is the ability for each moduleto accept ambiguous inputs and produce ambiguousoutputs, in such a way that ambiguities can be re-solved at a later stage of processing. The compactrepresentation of ambiguous structures is at the heartof the MACAON exchange format, described in sec-tion 2. Furthermore every module can weight thesolutions it produces. such weights can be used torank solutions or limit their number for later stages1Annotation must be taken here in a general sense which in-cludes tagging, segmentation or the construction of more com-plex objets as syntagmatic or dependencies trees.86of processing.Several processing tools suites alread exist forFrench among which SXPIPE (Sagot and Boullier,2008), OUTILEX (Blanc et al., 2006), NOOJ2 or UNI-TEX3. A general comparison of MACAON with thesetools is beyond the scope of this paper. Let us justmention that MACAON shares with most of them theuse of finite state machines as core data represen-tation. Some modules are implemented as standardoperations on finite state machines.MACAON can also be compared to the numerousdevelopment frameworks for developping process-ing tools, such as GATE4, FREELING5, ELLOGON6or LINGPIPE7 that are usually limited to the process-ing of native texts.The MACAON exchange format shares a cer-tain number of features with linguistic annotationscheme standards such as the Text Encoding Initia-tive8, XCES9, or EAGLES10. They all aim at definingstandards for various types of corpus annotations.The main difference between MACAON and theseapproaches is that MACAON defines an exchange for-mat between NLP modules and not an annotationformat. More precisely, this format is dedicated tothe compact representation of ambiguity: some in-formation represented in the exchange format areto be interpreted by MACAON modules and wouldnot be part of an annotation format. Moreover,the MACAON exchange format was defined from thebottom up, originating from the authors' need to useseveral existing tools and adapt their input/outputformats in order for them to be compatible. This is incontrast with a top down approach which is usuallychosen when specifying a standard. Still, MACAONshares several characteristics with the LAF (Ide andRomary, 2004) which aims at defining high levelstandards for exchanging linguistic data.2www.nooj4nlp.net/pages/nooj.html3www-igm.univ-mlv.fr/unitex4gate.ac.uk5garraf.epsevg.upc.es/freeling6www.ellogon.org7alias-i.com/lingpipe8www.tei-c.org/P59www.xml-ces.org10www.ilc.cnr.it/eagles/home.html</introduction>
	<body>2 The MACAON exchange formatThe MACAON exchange format is based on four con-cepts: segment, attribute, annotation level and seg-mentation.A segment refers to a segment of the text orspeech signal that is to be processed, as a sentence,a clause, a syntactic constituent, a lexical unit, anamed entity . . . A segment can be equipped with at-tributes that describe some of its aspects. A syntac-tic constituent, for example, will define the attributetype which specifies its syntactic type (Noun Phrase,Verb Phrase . . . ). A segment is made of one or moresmaller segments.A sequence of segments covering a whole sen-tence for written text, or a spoken utterance for oraldata, is called a segmentation. Such a sequence canbe weighted.An annotation level groups together segments ofa same type, as well as segmentations defined onthese segments. Four levels are currently defined:pre-lexical, lexical, morpho-syntactic and syntactic.Two relations are defined on segments: the prece-dence relation that organises linearly segments of agiven level into segmentations and the dominancerelation that describes how a segment is decomposedin smaller segments either of the same level or of alower level.We have represented in figure 2, a schematic rep-resentation of the analysis of the reconstructed out-put a speech recognizer would produce on the in-put time flies like an arrow11. Three annotation lev-els have been represented, lexical, morpho-syntacticand syntactic. Each level is represented by a finite-state automaton which models the precedence rela-tion defined over the segments of this level. Seg-ment time, for example, precedes segment flies. Thesegments are implicitly represented by the labels ofthe automaton's arcs. This label should be seen asa reference to a more complex objet, the actual seg-ment. The dominance relations are represented withdashed lines that link segments of different levels.Segment time, for example, is dominated by seg-ment NN of the morpho-syntactic level.This example illustrates the different ambiguitycases and the way they are represented.11For readability reasons, we have used an English example,MACAON, as mentioned above, currently exists for French.87thymetimeflieslikelikenan arrowa rowJJ INVBDT NNDT NNVBNNNNVBZVB VBVPVPNPNPVPNPVPVPPPNPNPFigure 1: Three annotation levels for a sample sentence.Plain lines represent annotation hypotheses within a levelwhile dashed lines represent links between levels. Trian-gles with the tip up are "and" nodes and triangles withthe tip down are "or" nodes. For instance, in the part-of-speech layer, The first NN can either refer to "time" or"thyme". In the chunking layer, segments that span mul-tiple part-of-speech tags are linked to them through "and"nodes.The most immediate ambiguity phenomenon isthe segmentation ambiguity: several segmentationsare possible at every level. This ambiguity is rep-resented in a compact way through the factoring ofsegments that participate in different segmentations,by way of a finite state automaton.The second ambiguity phenomenon is the dom-inance ambiguity, where a segment can be decom-posed in several ways into lower level segments.Such a case appears in the preceding example, wherethe NN segment appearing in one of the outgoingtransition of the initial state of the morpho-syntacticlevel dominates both thyme and time segments of thelexical level. The triangle with the tip down is an"or" node, modeling the fact that NN corresponds totime or thyme.Triangles with the tip up are "and" nodes. Theymodel the fact that the PP segment of the syntac-tic level dominates segments IN, DT and NN of themorpho-syntactic level.2.1 XML representationThe MACAON exchange format is implemented inXML. A segment is represented with the XML tag&amp;lt;segment&amp;gt; which has four mandatory attributes:* type indicates the type of the segment, four dif-ferent types are currently defined: atome (pre-lexical unit usually referred to as token in en-glish), ulex (lexical unit), cat (part of speech)and chunk (a non recursive syntactic unit).* id associates to a segment a unique identifier inthe document, in order to be able to referenceit.* start and end define the span of the segment.These two attributes are numerical and repre-sent either the index of the first and last char-acter of the segment in the text string or thebeginning and ending time of the segment ina speech signal.A segment can define other attributes that can beuseful for a given description level. We often findthe stype attribute that defines subtypes of a giventype.The dominance relation is represented through theuse of the &amp;lt;sequence&amp;gt; tag. The domination of thethree segments IN, DT and NN by a PP segment,mentionned above is represented below, where p1,p2 and p3 are respectively the ids of segments IN,DT and NN.&amp;lt;segment type="chunk" stype="PP" id="c1"&amp;gt;&amp;lt;sequence&amp;gt;&amp;lt;elt segref="p1"/&amp;gt;&amp;lt;elt segref="p2"/&amp;gt;&amp;lt;elt segref="p3"/&amp;gt;&amp;lt;/sequence&amp;gt;&amp;lt;/segment&amp;gt;The ambiguous case, described above where seg-ment NN dominates segments time or thyme is rep-resented below as a disjunction of sequences insidea segment. The disjunction itself is not representedas an XML tag. l1 and l2 are respectively the idsof segments time and thyme.&amp;lt;segment type="cat" stype="NN" id="c1"&amp;gt;&amp;lt;sequence&amp;gt;&amp;lt;elt segref="l1" w="-3.37"/&amp;gt;&amp;lt;/sequence&amp;gt;&amp;lt;sequence&amp;gt;&amp;lt;elt segref="l2" w="-4.53"/&amp;gt;&amp;lt;/sequence&amp;gt;&amp;lt;/segment&amp;gt;88The dominance relation can be weighted, by wayof the attribute w. Such a weight represents in thepreceding example the conditional log-probabilityof a lexical unit given a part of speech, as in a hiddenMarkov model.The precedence relation (i.e. the organizationof segments in segmentations), is represented as aweighted finite state automaton. Automata are rep-resented as a start state, accept states and a list oftransitions between states, as in the following exam-ple that corresponds to the lexical level of our exam-ple.&amp;lt;fsm n="9"&amp;gt;&amp;lt;start n="0"/&amp;gt;&amp;lt;accept n="6"/&amp;gt;&amp;lt;ltrans&amp;gt;&amp;lt;trans o="0" d="1" i="l1" w="-7.23"/&amp;gt;&amp;lt;trans o="0" d="1" i="l2" w="-9.00"/&amp;gt;&amp;lt;trans o="1" d="2" i="l3" w="-3.78"/&amp;gt;&amp;lt;trans o="2" d="3" i="l4" w="-7.37"/&amp;gt;&amp;lt;trans o="3" d="4" i="l5" w="-3.73"/&amp;gt;&amp;lt;trans o="2" d="4" i="l6" w="-6.67"/&amp;gt;&amp;lt;trans o="4" d="5" i="l7" w="-4.56"/&amp;gt;&amp;lt;trans o="5" d="6" i="l8" w="-2.63"/&amp;gt;&amp;lt;trans o="4" d="6" i="l9" w="-7.63"/&amp;gt;&amp;lt;/ltrans&amp;gt;&amp;lt;/fsm&amp;gt;The &amp;lt;trans/&amp;gt; tag represents a transition, itso,d,i and w features are respectively the origin, anddestination states, its label (the id of a segment) anda weight.An annotation level is represented by the&amp;lt;section&amp;gt; tag which regroups two tags, the&amp;lt;segments&amp;gt; tag that contains the different segmenttags defined at this annotation level and the &amp;lt;fsm&amp;gt;tag that represents all the segmentations of this level.3 The MACAON architectureThree aspects have guided the architecture ofMACAON: openness, modularity, and speed. Open-ness has been achieved by the definition of an ex-change format which has been made as general aspossible, in such a way that mapping can be de-fined from and to third party modules as ASR, MTsystems or parsers. Modularity has been achievedby the definition of independent modules that com-municate with each other through XML files usingstandard UNIX pipes. A module can therefore be re-placed easily. Speed has been obtained using effi-cient algorithms and a representation especially de-signed to load linguistic data and models in a fastway.MACAON is composed of libraries and compo-nents. Libraries contain either linguistic data, mod-els or API functions. Two kinds of components arepresented, the MACAON core components and thirdparty components for which mappings to and fromthe MACAON exchange format have been defined.3.1 LibrariesThe main MACAON library is macaon common.It defines a simple interface to the MACAON ex-change format and functions to load XML MACAONfiles into memory using efficient data structures.Other libraries macaon lex, macaon code andmacaon tagger lib represent the lexicon, themorphological data base and the tagger models inmemory.MACAON only relies on two third-party libraries,which are gfsm12, a finite state machine library andlibxml, an XML library13.3.2 The MACAON core componentsA brief description of several standard componentsdeveloped in the MACAON framework is given be-low. They all comply with the exchange format de-scribed above and add a &amp;lt;macaon stamp&amp;gt; to theXML file that indicates the name of the component,the date and the component version number, and rec-ognizes a set of standard options.maca select is a pre-processing component: it addsa macaon tag under the target tags specified bythe user to the input XML file. The follow-ing components will only process the documentparts enclosed in macaon tags.maca segmenter segments a text into sentences byexamining the context of punctuation with aregular grammar given as a finite state automa-ton. It is disabled for automatic speech tran-scriptions which do not typically include punc-tuation signs and come with their own segmen-tation.12ling.uni-potsdam.de/moocow/projects/gfsm/13xmlsoft.org89maca tokenizer tokenizes a sentence into pre-lexical units. It is also based on regular gram-mars that recognize simple tokens as well as apredefined set of special tokens, such as timeexpressions, numerical expressions, urls. . . .maca lexer allows to regroup pre-lexical units intolexical units. It is based on the lefff French lex-icon (Sagot et al., 2006) which contains around500,000 forms. It implements a dynamic pro-gramming algorithm that builds all the possiblegrouping of pre-lexical units into lexical units.maca tagger associates to every lexical unit one ormore part-of-speech labels. It is based on atrigram Hidden Markov Model trained on theFrench Treebank (Abeille et al., 2003). The es-timation of the HMM parameters has been re-alized by the SRILM toolkit (Stolcke, 2002).maca anamorph produces the morphological anal-ysis of lexical units associated to a part ofspeech. The morphological information comefrom the lefff lexicon.maca chunker gathers sequences of part-of-speechtags in non recursive syntactic units. This com-ponent implements a cascade of finite statetransducers, as proposed by Abney (1996). Itadds some features to the initial Abney pro-posal, like the possibility to define the head ofa chunk.maca conv is a set of converters from and to theMACAON exchange format. htk2macaonand fsm2macaon convert word lattices fromthe HTK format (Young, 1994) and ATTFSM format (Mohri et al., 2000) to theMACAON exchange format. macaon2txt andtxt2macaon convert from and to plain textfiles. macaon2lorg and lorg2macaonconvert to and from the format of the LORGparser (see section 3.3).maca view is a graphical interface that allows to in-spect MACAON XML files and run the compo-nents.3.3 Third party componentsMACAON is an open architecture and provides a richexchange format which makes possible the repre-sentation of many NLP tools input and output in theMACAON format. MACAON has been interfaced withthe SPEERAL Automatic Speech Recognition Sys-tem (Nocera et al., 2006). The word lattices pro-duced by SPEERAL can be converted to pre-lexicalMACAON automata.MACAON does not provide any native module forparsing yet but it can be interfaced with any alreadyexisting parser. For the purpose of this demonstra-tion we have chosen the LORG parser developed atNCLT, Dublin14. This parser is based on PCFGswith latent annotations (Petrov et al., 2006), a for-malism that showed state-of-the-art parsing accu-racy for a wide range of languages. In addition it of-fers a sophisticated handling of unknown words re-lying on automatically learned morphological clues,especially for French (Attia et al., 2010). Moreover,this parser accepts input that can be tokenized, pos-tagged or pre-bracketed. This possibility allows fordifferent settings when interfacing it with MACAON.4 ApplicationsMACAON has been used in several projects, two ofwhich are briefly described here, the DEFINIENSproject and the LUNA project.DEFINIENS (Barque et al., 2010) is a project thataims at structuring the definitions of a large coverageFrench lexicon, the Tresor de la langue francaise.The lexicographic definitions have been processedby MACAON in order to decompose the definitionsinto complex semantico-syntactic units. The dataprocessed is therefore native text that possesses arich XML structure that has to be preserved duringprocessing.LUNA15 is a European project that aims at extract-ing information from oral data about hotel booking.The word lattices produced by an ASR system havebeen processed by MACAON up to a partial syntacticlevel from which frames are built. More details canbe found in (Bechet and Nasr, 2009). The key aspectof the use of MACAON for the LUNA project is theability to perform the linguistic analyses on the mul-tiple hypotheses produced by the ASR system. It istherefore possible, for a given syntactic analysis, to14www.computing.dcu.ie/lorg. This softwareshould be freely available for academic research by the timeof the conference.15www.ist-luna.eu90Figure 2: Screenshot of the MACAON visualization inter-face (for French models). It allows to input a text and seethe n-best results of the annotation.find all the word sequences that are compatible withthis analysis.Figure 2 shows the interface that can be used tosee the output of the pipeline.</body>
	<conclusion>In this paper we have presented MACAON, an NLPtool suite which allows to process native text as wellas several hypotheses automatically produced by anASR or an MT system. Several evolutions are cur-rently under development, such as a named entityrecognizer component and an interface with a de-pendency parser.</conclusion>
	<discussion>N/A</discussion>
	<biblio>Anne Abeille, Lionel Clement, and Francois Toussenel.2003. Building a treebank for french. In AnneAbeille, editor, Treebanks. Kluwer, Dordrecht.Steven Abney. 1996. Partial parsing via finite-state cas-cades. In Workshop on Robust Parsing, 8th EuropeanSummer School in Logic, Language and Information,Prague, Czech Republic, pages 8-15.M. Attia, J. Foster, D. Hogan, J. Le Roux, L. Tounsi, andJ. van Genabith. 2010. Handling Unknown Words inStatistical Latent-Variable Parsing Models for Arabic,English and French. In Proceedings of SPMRL.Lucie Barque, Alexis Nasr, and Alain Polguere. 2010.From the definitions of the tresor de la langue francaiseto a semantic database of the french language. In EU-RALEX 2010, Leeuwarden, Pays Bas.Frederic Bechet and Alexis Nasr. 2009. Robust depen-dency parsing for spoken language understanding ofspontaneous speech. In Interspeech, Brighton, UnitedKingdom.Olivier Blanc, Matthieu Constant, and Eric Laporte.2006. Outilex, plate-forme logicielle de traitement detextes ecrits. In TALN 2006, Leuven.Nancy Ide and Laurent Romary. 2004. Internationalstandard for a linguistic annotation framework. Nat-ural language engineering, 10(3-4):211-225.M. Mohri, F. Pereira, and M. Riley. 2000. The designprinciples of a weighted finite-state transducer library.Theoretical Computer Science, 231(1):17-32.P. Nocera, G. Linares, D. Massonie, and L. Lefort. 2006.Phoneme lattice based A* search algorithm for speechrecognition. In Text, Speech and Dialogue, pages 83-111. Springer.Slav Petrov, Leon Barrett, Romain Thibaux, and DanKlein. 2006. Learning Accurate, Compact, and In-terpretable Tree Annotation. In ACL.Benoit Sagot and Pierre Boullier. 2008. Sxpipe 2:architecture pour le traitement presyntaxique de cor-pus bruts. Traitement Automatique des Langues,49(2):155-188.Benoit Sagot, Lionel Clement, Eric Villemonte de laClergerie, and Pierre Boullier. 2006. The lefff 2 Syn-tactic Lexicon for French: Architecture, Acquisition,Use. In International Conference on Language Re-sources and Evaluation, Genoa.Andreas Stolcke. 2002. Srilm - an extensible languagemodeling toolkit. In International Conference on Spo-ken Language Processing, Denver, Colorado.S.J. Young. 1994. The HTK Hidden Markov ModelToolkit: Design and Philosophy. Entropic CambridgeResearch Laboratory, Ltd, 2:2-44.91</biblio>
</article>