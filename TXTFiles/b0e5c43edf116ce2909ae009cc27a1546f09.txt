Nom du fichier :
			b0e5c43edf116ce2909ae009cc27a1546f09.pdf
Titre :
			Inclusive yet Selective: Supervised Distributional Hypernymy Detection
Nombre d'auteur :
 			3
Auteurs :
			Stephen Roller
			Katrin Erk
			Gemma Boleda
Mails :
			roller@cs.utexas.edu,
			katrin.erk@mail.utexas.edu,
			gemma.boleda@upf.edu
Abstract :
			We test the Distributional Inclusion Hypothesis, which states that hypernyms tend to occur in a superset of contexts in which their hyponyms are found. We find that this hypothesis only holds when it is applied to relevant dimensions. We propose a robust supervised approach that achieves accuracies of .84 and .85 on two existing datasets and that can be interpreted as selecting the dimensions that are relevant for distributional inclusion.

Intro :
			One of the main criticisms of distributional models has been that they fail to distinguish between semanticrelations: Typical nearest neighbors of dog are words like cat, animal, puppy, tail, or owner, all obviouslyrelated to dog, but through very different types of semantic relations. On these grounds, Murphy (2002)argues that distributional models cannot be a valid model of conceptual representation. Distinguishingsemantic relations are also crucial for drawing inferences from distributional data, as different semanticrelations lead to different inference rules (Lenci, 2008). This is of practical import for tasks such asRecognizing Textual Entailment or RTE (Geffet and Dagan, 2004).For these reasons, research has in recent years started to attempt the detection of specific semanticrelationships, and current results suggest that distributional models can, in fact, distinguish betweensemantic relations, given the right similarity measures (Weeds et al., 2004; Kotlerman et al., 2010; Lenciand Benotto, 2012; Herbelot and Ganesalingam, 2013; Santus, 2013). Because of its relevance for RTEand other tasks, much of this work has focused on hypernymy. Hypernymy is the semantic relationbetween a superordinate term in a taxonomy (e.g. animal) and a subordinate term (e.g. dog).Distributional approaches to date for detecting hypernymy, and the related but broader relation oflexical entailment, have been unsupervised (except for Baroni et al. (2012)) and have mostly been basedon the Distributional Inclusion Hypothesis (Zhitomirsky-Geffet and Dagan, 2005; Zhitomirsky-Geffetand Dagan, 2009), which states that more specific terms appear in a subset of the distributional contextsin which more general terms appear. So, animal can occur in all the contexts in which dog can occur,plus some contexts in which dog cannot - for instance, rights can be a typical cooccurrence for animal(e.g. "animal rights"), but not so much for dog (e.g. #"dog rights").This paper takes a closer look at the Distributional Inclusion Hypothesis for hypernymy detection. Weshow that the current best unsupervised approach is brittle in that their performance depends on the spacethey are applied to. This raises the question of whether the Distributional Inclusion Hypothesis is correct,and if so, under what circumstances it holds. We use a simple supervised approach to relation detectionthat has good performance (accuracy .84 on BLESS, .85 on the lexical entailment dataset of Baroni etal. (2012)) and works well across different spaces.1 Furthermore, we show that it can be interpretedas selecting dimensions for which the Distributional Inclusion Hypothesis does hold. So, our answer isto propose the Selective Distributional Inclusion Hypothesis: The Distributional Inclusion Hypothesisholds, but only for relevant dimensions.This work is licenced under a Creative Commons Attribution 4.0 International License. Page numbers and proceedings footerare added by the organizers. License details: http://creativecommons.org/licenses/by/4.0/1Code and data are available at http://stephenroller.com/research/coling14.1025

Corps :			2 BackgroundDistributional models. Distributional models represent a word through the contexts in which it hasbeen observed, usually in the form of a vector representation (Turney and Pantel, 2010). A target wordis represented as a vector in a high-dimensional space in which the dimensions are context items (forexample, other words) and the coordinates of the vector indicate the target's degree of association witheach context item. In this paper, we also use dimensionality reduced spaces in which dimensions do notstand for individual context items anymore.Pattern-based approaches to inducing semantic relations. Early work on automatically inducing se-mantic relations between words, starting with Hearst (1992), uses textual patterns. For example, "[NP1]and other [NP2]" implies that NP2 is a hypernym of NP1. Pattern-based approaches have been appliedto meronymy (Berland and Charniak, 1999; Girju et al., 2003; Girju et al., 2006), synonymy (Lin et al.,2003), co-hyponymy (Snow et al., 2005), hypernymy (Cimiano et al., 2005), and several relations be-tween verbs (Chklovski and Pantel, 2004). Pantel and Pennachiotti (2006) generalize the idea to a widevariety of relations. Turney (2006) uses vectors of patterns to determine similarity of semantic relations.A task related to semantic relation induction is the extension of an existing taxonomy (Buitelaar et al.,2005). Snow et al. (2006) do this by using hypernymy and co-hyponymy detectors.Lexical entailment, hypernymy, and the Distributional Inclusion Hypothesis. Weeds et al. (2004)introduce the notion of distributional generality, where v is distributionally more general than u if uappears in a subset of the contexts in which v is found, and speculate that hypernyms (v) should be moredistributionally general than hyponyms (u). Zhitomirsky-Geffet and Dagan (2005; 2009) introduce theterm Distributional Inclusion Hypothesis for the idea that distributional generality encodes hypernymyor the more loosely defined relation of lexical entailment.Weeds and Weir (2003) measure distributional generality using a notion of precision (eq. 1). Here andin all equations below, u is the narrower term, and v the more general one. Abusing notation, we write ufor both a word and its associated vector u1, . . . , un . Kotlerman et al. (2010) predict lexical entailmentwith the balAPinc measure, a modification of the Average Precision (AP) measure (eq. 2). The generalnotion is that scores should increase with the number of dimensions of v that u shares, and also give moreweight to the highly ranked dimensions (i.e. largest magnitude) of the narrower term u. This is capturedin APinc by computing precision P(r) at every rank r among u's dimensions - where precision is thefraction of dimensions shared with v -, and weighting by the rank of the same dimension in the broaderterm, rel (v, r, u). The final measure, balAPinc, smooths using the LIN similarity measure (Lin, 1998).(We only sketch this measure here due to its complexity; details are given in Kotlerman et al. (2010).)1(x) =1 if x > 0;0 otherwiseWeedsPrec(u, v) =ni=1ui * 1(vi)ni=1ui(1)APinc(u, v) =|1(u)|r=1P(r) * rel (v, r, u))|1(u)|(2)balAPinc(u, v) = APinc(u, v) * LIN(u, v)The ClarkeDE measure (Clarke, 2009) computes degree of entailment as the degree to which the nar-rower term u has lower values than v across all dimensions (eq. 3). Lenci and Benotto (2012) introducethe invCL measure, which uses ClarkeDE to measure both distributional inclusion of u in v and distri-butional non-inclusion of v in u (eq. 4). While all other measures interpret the Distributional InclusionHypothesis as the degree to which a  relation holds, Lenci and Benotto test the degree to which properinclusion holds. They consider not only the degree to which the contexts of the narrower terms areincluded in the contexts of the wider term, but also determine the degree to which the wider term hascontexts that the narrower term does not have.1026CL(u, v) =ni=1min(ui, vi)ni=1ui(3)invCL(u, v) = CL(u, v) * (1 - CL(v, u)) (4)Like Lenci and Benotto, we focus on the stricter hypernymy relation, rather than lexical entailment.We believe that the different relations that make up lexical entailment have different distributional indi-cations and that, for that reason, it will be easier to detect the relations separately than together.Baroni et al. (2012) proposes a supervised approach to hypernymy detection that represents two wordsas the concatenation of their vectors. They also mention in passing another supervised approach thatrepresents two words as the component-wise difference of their vectors. These are broadly the twoapproaches that we test, though we introduce significant modifications.3 Data3.1 Distributional Vector SpacesWe use three standard types of distributional spaces.U+W2: This space is based on a concatenation of the Gigaword, BNC, English Wackypedia andukWaC corpora (Baroni et al., 2009). The corpora are POS-tagged and lemmatized. We keep onlycontent words (nouns, proper nouns, adjectives and verbs) with a corpus frequency of 500 or larger. Theresulting U+ corpus has roughly 133K word types and 2.8B word tokens. We created a vector space bycounting co-occurrences of these word types within a window of two words on the left and the right,using the top 20k most frequent content words as dimensions. The space was transformed using PositivePointwise Mutual Information (PPMI).U+Sent: The U+Sent space is constructed the same way as U+W2, but uses full sentence contextsinstead of 2-word windows.TypeDM: This space is extracted from the TypeDM tensors (Baroni and Lenci, 2011). TypeDM con-tains a list of weighted tuples, w1, l, w2 ,  , where w1 and w2 are content words, l is a corpus-derivedsyntagmatic relationship between the words, and  is a weight estimating saliency of the relationship. Weconstruct vectors for every unique w1 using the set of l, w2 pairs as dimensions and corresponding values as dimension weights. We select TypeDM for its excellent performance in previous comparisonsof distributional hypernymy measures (Lenci and Benotto, 2012).Reduced Spaces: In some experiments, we use dimensionality reduced spaces. We reduce all threespaces to 300 dimensions using Singular Value Decomposition. We use a subscript to denote reducedspaces, e.g. U+W2300. When necessary, we use the term original dimensions to refer to the vectordimensions from the original, non-reduced spaces (e.g. U+W2); the term latent dimensions refers to thedimensions in the reduced spaces (e.g. U+W2300).3.2 Evaluation Data SetsBLESS: The BLESS data set (Baroni and Lenci, 2011) covers 200 concepts, or concrete and unambigu-ous terms (divided into 17 different general concept classes, including vehicle and ground mammal), andtheir relationships to other nouns, called relata. Example concepts include van and horse. Each conceptis related to several relata through different semantic relations. Following Lenci and Benotto (2012), wefocus on the four semantic relations where both concepts and relata are nouns, for a total 14K data points:Hypernymy, denoting a superset relationship (e.g. animal-dog); Co-hyponymy, denoting words that sharea common hypernym (e.g. dog-cat); Meronymy, denoting a part-whole relationship (e.g. tail-dog); andRandom, denoting no relationship between the words (e.g. dog-computer).1027qqqqqqqqqqqqqqqqqqqqqqq-1.5-1.0-0.50.00.51.01.5Co-hyp Hyper Mero RandomzU+W2, invCLqqqqqqqqqqqqqq-1.5-1.0-0.50.00.51.01.5Co-hyp Hyper Mero RandomzU+Sent, invCLqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq-1.5-1.0-0.50.00.51.01.5Co-hyp Hyper Mero RandomzTypeDM, invCLFigure 1: Distributions of relata invCL scores for the U+W2, U+Sent, and TypeDM spaces for each ofthe semantic relations, after per-concept z-normalization.ENTAILMENT: (Baroni et al., 2012): The ENTAILMENT data set consists of 2,770 word pairs, bal-anced between positive (house-building) and negative (leader-rider) examples of hypernymy, with 1376unique hyponyms and 1016 unique hypernyms. The positive examples were generated by selecting directhypernym relationships from WordNet, the negative examples by randomly permuting the hypernyms ofthe positive examples, and then manually checking correctness.4 Distributional Inclusion across SpacesWe test several unsupervised distributional approaches to hypernymy detection from the literature, fo-cusing on the underlying vector space representation as the main parameter that we vary. We use thethree spaces described in Section 3. We test four hypernymy detection approaches, all of them similaritymeasures based on the Distributional Inclusion Hypothesis: WeedsPrec, balAPinc, ClarkeDE, and invCL.Our baseline is the standard cosine measure. We evaluate on the BLESS dataset.To evaluate on BLESS, we follow the evaluation scheme laid out in Baroni and Lenci (2011). Given aspace and similarity measure, we compute similarity for each concept and relatum. For each concept, weselect its nearest neighbors (according to the given similarity measure) in each of the four relations (CO-HYP, HYPER, MERO, RANDOM), and transform the corresponding four similarities to z-scores. Acrossall concepts, this yields four sets of z-normalized similarity scores, one for each relation. These four setsdescribe the relative similarity of concepts to their nearest neighbors in different relations. Tukey's Hon-estly Significant Difference test is used for testing whether scores differ significantly between relations(threshold: p < 0.05).Figure 1 shows the distributions of z-scores for invCL for the four relations, with one graph for eachof the three spaces we consider. For this illustration, we focus on invCL because it shows the overall bestperformance at identifying hypernymy. The rightmost plot in Figure 1 replicates the analysis of Lenciand Benotto (2012), who used the TypeDM space. It confirms their finding that invCL gives significantlyhigher values to hypernyms than co-hyponyms - at least on this space. However, in the U+W2 andU+Sent spaces (leftmost and middle plot), invCL clearly loses any ability to rank hypernyms the highest;indeed, in both spaces, co-hyponymy and meronymy both have significantly higher z-scores than hyper-nymy. Concerning the other measures, we found that they patterned with invCL. On TypeDM, ClarkeDEand WeedsPrec had significantly higher nearest-neighbor values for hypernyms than co-hyponyms.2 OnU+W2 and U+Sent, all measures ranked co-hyponyms significantly higher than hypernyms. With thebaseline measure, cosine, the similarity ratings for the CO-HYP relation are always the highest, no matterthe space, followed by HYPER, MERO, RANDOM in this order.Following Kotlerman et al. (2010) and Lenci and Benotto (2012), we also report the performance ofthe measures using Mean Average Precision (MAP). Average Precision (AP) is a measure often used in2balAPinc could not be evaluated on TypeDM due to computational issues.1028Measure CO-HYP HYPER MERO RANDOMU+W2cosine .68 .20 .27 .27ClarkeDE .66 .19 .28 .28invCL .60 .18 .31 .28U+Sentcosine .66 .18 .28 .28ClarkeDE .66 .15 .29 .28invCL .59 .13 .34 .29TypeDMcosine .78 .19 .20 .29ClarkeDE .45 .35 .25 .32invCL .38 .36 .27 .33Table 1: Mean Average Precision for the unsupervised measures on three spaces.the Information Retrieval community with a maximal AP score of 1 when all relevant documents (relatawith the right relationship, in our case) are ranked at the top. We compute AP on a per-concept basis andreport the mean over all 200 AP values. An advantage of MAP is that, while the BLESS analysis methodfocuses on nearest neighbors, MAP evaluates the ranking of all relata. A disadvantage of MAP is that itdoes not test the degree to which a similarity measure separates different semantic relations, like Tukeydoes, so it may overstate the discriminative power of a particular measure. However, it provides a moreintuitive accuracy-like number compared to the BLESS evaluation.Table 1 shows the Mean Average Precision values for cosine, ClarkeDE, and invCL on all three spaces.We also computed WeedsPrec and balAPinc results, obtaining the same picture; we focus on ClarkeDEand invCL because ClarkeDE is a component of invCL, and invCL is the current best measure. The resultscorresponding to Lenci and Benotto's are shown in the lowest part of Table 1, where we report numbersfor TypeDM. Like Lenci and Benotto, we find that unsupervised measures other than invCL rank co-hyponyms the highest, and obtain relatively low results for hypernyms. For invCL in TypeDM, Lenciand Benotto obtain 0.38 MAP for co-hyponyms and a slightly higher 0.40 for hypernyms, though theydo not report significance testing results. We obtain 0.38 for co-hyponyms and 0.36 for hypernyms, andthe difference is not significant.3 Even though our results are slightly different from those in Lenci andBenotto (2012), both our results and theirs point to at most a weak preference of invCL for hypernymsover co-hyponyms. Moreover, in the U+W2 and U+Sent spaces we see that all three measures are verypoor at identifying hypernyms, and the co-hyponymy relation stubbornly persists as most relevant to allthree measures, by a large margin.Our results thus constitute a puzzle for the Distributional Inclusion Hypothesis. It seems that theremust be some merit to the hypothesis: On one particular space, namely TypeDM, the nearest neighborsin the hypernymy relation had higher similarity scores than any other relation by a significant margin.This was true for all the hypernymy detectors we studied. But even on TypeDM, the MAP evaluationshowed at most a weak hypernymy signal, and when spaces other than TypeDM were used, the effectvanished altogether. So how strong an indication for hypernymy can we expect from distributionalinclusion measures in general? We will return to this question below, where our answer will be: TheDistributional Inclusion Hypothesis seems to hold after all, but it needs to be applied to the right kind ofdimensions - and a supervised approach can help in picking the right dimensions.As the unsupervised approaches struggle to detect hypernymy and do not seem robust to changes instandard space parameters, we think it is time to consider supervised approaches. In the next section, weexplore two simple supervised approaches that show good performance and are robust to changes in theunderlying space.3Wilcoxon signed-rank test.10295 Supervised Hypernymy DetectionWe use two simple, supervised models for predicting BLESS and ENTAILMENT relations. The first(Concat) is a model previously proposed by Baroni et al. (2012). The second (Diff) takes up an ideafrom a footnote in Baroni et al. (2012), but while that footnote stated that the approach in question didnot work, we find that, with a few modifications, it obtains the best performance - and can be interpretedas a supervised version of the Distributional Inclusion Hypothesis. Note that while we used unreducedspaces in the previous section, we now use reduced spaces throughout (these are the spaces with the 300subscript), in order not to have more features than data points.5.1 Models, Features, and MethodConcat: We use a standard Support Vector Machine (SVM) classifier with a concatenation of vectors asinput features. SVMs are binary classifiers which learn the maximum margin hyperplane separating thetwo classes. SVMs employ kernel functions to find the hyperplanes in higher dimensional spaces whichare nonlinear in the original space. As feature vectors for the classifier, we follow Baroni et al. (2012)and use the concatenation of the latent dimension vectors representing words. For the ENTAILMENTdataset, we use the concatenation of the hyponym latent vector and the hypernym latent vector for eachword pair as training features, and the entails/doesn't entail annotations as binary targets. For BLESS,we use the concatenation of the concept latent vector and the relatum latent vector as training features,and the four relationship classes as targets. We choose the four-way task rather than a "hypernymy vs.other" classification because BLESS contains many more co-hyponymy and random than hypernymypairs, which would give a very high baseline in the two-way task. Additionally, the other relations inBLESS, in particular meronymy, may be interesting in their own right.Since SVMs are binary classifiers, we use SciKit-Learn's default setting to train 6 pairwise-relationone-vs-one classifiers which vote on the final answer. We use a polynomial kernel with a degree of 3and a penalty term of C = 1.0, and all other hyperparameters are chosen using the SciKit-Learn defaultvalues (Pedregosa et al., 2011). No hyperparameters are tuned in any experiment.Diff: Our second classifier is a Logistic Regression (aka MaxEnt) model trained on difference vectors.Logistic Regression is a statistical model for binary classification. It learns a linear hyperplane sepa-rating the classes and estimates a probability for classes using a logistic function. We selected LogisticRegression over other possible linear classifiers for its natural ability to give likelihood estimates, whichwe believe will be useful in future work in an application of hypernymy classification to RTE.As feature vectors, we use a Mikolov-inspired method of representing word pairs as the differencevectors between the two words.4 Baroni et al. (2012) suggested the use of difference vectors as inputto a classifier, but reported them as unsuccessful. We found difference vectors to be excellent features,with three important modifications: a linear classifier is better than a nonlinear one; vectors must benormalized to have a magnitude of 1 before taking the difference; and squared difference vectors mustalso be included as features. So, we represent each word pair with latent vectors (u, v) as a two partvector f; g , wherefi =uiu-viv,gi = f 2i.These differences features5 are analogous to a supervised distributional inclusion measure. The dif-ference between two words on a particular dimension captures the degree of distributional inclusion onthat dimension. The primary distinction between the difference features and the unsupervised measuresis that the supervised classifier learns to weight the importance of different dimensions. The f featuresencode directional aspects of distributional inclusion: that the hyponym contexts should be included in4After recent work using subtraction to represent analogy in certain neural-network spaces (Mikolov et al., 2013).5We also tried variations, such as not normalizing vectors and removing the difference squared vector, but found this settingthe best. We also tried the Diff features with an SVM and other nonlinear classifiers, but they performed worse.1030Data set BLESS ENTAILMENTBaseline .46 .50Classifier Concat Diff Concat DiffU+W2300 .76 .84 .81 .85U+Sent300 .73 .80 .78 .82TypeDM300 - .82 .65 .85Table 2: Average accuracy of Concat and Diff on BLESS and ENTAILMENT using different spaces forfeature generation.those of the hypernym (the weight learned is positive), and the hypernym contexts should not be in-cluded in those of the hyponym (the weight learned is negative). So like invCL, this model uses a "propersubset" interpretation of the Distributional Inclusion Hypothesis, but only considers selected dimensions(i.e. those that the model assigns nonzero weights).The difference-squared features (g), on the other hand, typically identify dimensions that are not in-dicative of hypernymy, by learning negative weights on them (more about this in Section 6). Thus, ratherthan helping identify hypernyms, they help separate random relations from the rest.We use a L1 regularizer with a strength of C = 1.0. All other hyperparameters are chosen usingthe SciKit-Learn defaults. Since Diff is also a binary classifier, we use SciKit-Learn's default setting oftraining 4 one-vs-all classifiers for BLESS, with the most confident classifier choosing the final answer.Method: For evaluation on BLESS, we hold out one concept and train on the remaining 199 concepts.We also exclude from the training set any pair containing a relatum which appears in the test set. Thisway, no word that appears in the test set has been seen in training. We report the average accuracy acrossall concepts. We use the most frequent relation type (random) as our baseline. For the ENTAILMENT dataset, we hold out one hyponym and train on all remaining hyponyms. Again, we exclude from trainingany pair containing a hypernym which appears in the test set. We report average accuracy across allhyponyms. The data set is balanced, so the baseline is 0.5.5.2 ResultsTable 2 shows the performance of the two classifiers, Concat and Diff, on both the BLESS and ENTAIL-MENT datasets, using three underlying spaces. We use the reduced versions of the three spaces, indicatedby the subscript 300. Note that the Concat classifier could not converge using features from TypeDM300,so we omit the result. With both methods, we obtain a high accuracy on the two datasets, with resultsaround .8 against baselines around .5. Our best result is .84 on BLESS and .85 on ENTAILMENT. More-over, both approaches are in general robust to changes in space parameters (with TypeDM/Concat anoutlier). Still, the U+W2300 space seems to be the best for this task: Its scores are significantly6 higherthan the rest, except for TypeDM on ENTAILMENT, which achieves the same score as U+W2300. Diffachieves significantly higher results than Concat.When provided more information, Concat outperforms Diff. For instance, if cross-validation is doneover all pairs in BLESS in the U+W2300 space, Concat achieves .98 accuracy, while Diff obtains .90.However, in this setting the same words appear in the training and test sets (albeit in different pairs).We take this to mean that Concat is memorizing, rather than learning the hypernymy relation. Thisemphasizes the need for our stricter evaluation that prevents repetition between training and test sets.Clearly, both classifiers do fairly well at predicting hypernymy relations between words, regardlessof space. Naturally, one should ask what are the classifiers capturing that the unsupervised measuresare missing? We propose that the supervised classifiers perform essentially the same operation as theunsupervised measures, but are learning to determine the relevance of dimensions. In particular, Diffis learning weights on vector difference features. This is equivalent to doing selective distributionalinclusion. In the next section, we test this Selective Distributional Inclusion Hypothesis.6Wilcoxon signed-rank test, p < .001.1031qqqqqqqqqqq-1.5-1.0-0.50.00.51.01.5Co-hyp Hyper Mero RandomzU+W2 proj, cosineqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq-1.5-1.0-0.50.00.51.01.5Co-hyp Hyper Mero RandomzU+W2 proj, ClarkeDEqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq-1.5-1.0-0.50.00.51.01.5Co-hyp Hyper Mero RandomzU+W2 proj, invCLFigure 2: Distributions of relata scores across concepts using the cosine, ClarkeDE, and invCL measures(after per-concept z-normalization). Here we use the selected dimensions of the U+W2proj space.6 Selective Distributional InclusionIn order to test how well our supervised model is capturing the notion of selective distributional inclusion,we test each of the unsupervised measures on a smaller space, limited only to the dimensions preferredby the classifier. We emphasize that we do not aim to show that our supervised method outperformsunsupervised methods, but rather that the unsupervised methods benefit greatly from feature selection.Additionally, we analyze which dimensions are selected by the classifier to facilitate understanding ofwhy these dimensions are important.6.1 ExperimentWe train the Diff classifier using the dimensionality-reduced U+W2300 space with the same method weuse in Section 5. We take the classifier's learned hyperplane separating hypernyms from other relations,and project the hyperplane back into the original U+W2 space.7 We select the 500 dimensions in the orig-inal space that are most relevant according to the classifier weights, and test the unsupervised measureson this new space, which we denote as U+W2proj.8The 500 most relevant dimensions are selected as follows: We select the 250 most negatively weightedoriginal dimensions using the difference features f. These are the features that have smaller values forhyponyms (e.g. dog) than for hypernyms (e.g. animal), so they characterize hypernymy. We further selectthe 250 most positively weighted original dimensions using the squared-differences features g. Theseare the ones where a large difference does not indicate hypernymy.Figure 2 shows the boxplots for the BLESS analysis: the distributions of nearest-neighbor similarityscores for the four different semantic relations, for the measures cosine, ClarkeDE, and invCL. We seethat invCL now easily discriminates hypernymy from the other relations in the backprojected space. (Thedifference of HYPER and CO-HYP is significant.) This is even though the space is based on U+W2, whereinvCL failed to rate hypernyms higher than co-hypernyms in Section 4. Unsurprisingly, cosine, whichdoes not measure distributional inclusion, still prefers CO-HYP.Table 3 shows the MAP scores for three of the measures in the new U+W2proj space. (The resultsfor balAPinc and WeedsPrec are slightly worse than ClarkeDE.) All measures except for cosine assignhigher scores to hypernyms than they did in the original space (compare to U+W2 part of Table 1). Butit is only invCL that ranks hypernyms significantly higher than co-hyponyms.97Ideally we would train on the original space to inspect the relevant dimensions. However, there are more dimensions thanexamples, so we train on the SVD space and backproject.8Note that U+W2projvaries slightly from concept to concept, since the hyperplane is learned on a per-concept basis. It isimportant that we use the linear Diff classifier for this reverse-projection procedure, as the separating hyperplane must be linearin order to complete the projection. In particular, the hyperplane in the Concat classifier cannot be easily backprojected, sinceit exists in a higher dimensional space than the projection matrix. Furthermore, it is important that we use a classifier trainedusing the difference features because of its analogy to the Distributional Inclusion Hypothesis.9Wilcoxon signed-rank test, p < .001. To check that the measures are being improved by the dimension selection and not1032Measure CO-HYP HYPER MERO RANDOMU+W2projcosine .69 .20 .24 .28ClarkeDE .55 .39 .24 .29invCL .42 .58 .24 .29Table 3: Mean Average Precision for the unsupervised measures after selecting the top dimensions froma supervised model.For this experiment, we train on all of BLESS except for one concept and then evaluate the unsuper-vised models on the held-out concept - that is a setting that could, in principle, be used as a hypernymydetector. If we instead train the supervised model on all of BLESS to determine an upper bound of howwell dimension selection can do on this dataset, MAP for invCL rises to .67.Overall, these experiments provide strong evidence for the Selective Distributional Inclusion Hypoth-esis: The Distributional Inclusion Hypothesis holds, but only for relevant dimensions. In addition, hy-pernymy detectors need to test for "proper inclusion" of distributional contexts in order to really findhypernyms.Analysis of Selected Dimensions. We examine the 500 dimensions selected by the above procedure,in order to see what the classifier is learning. As this is for analysis only, the dimensions were selectedby training on all data.Recall that the difference-squared g features can be interpreted as dimensions that the classifier deemsnot indicative of hypernymy. 200 out of the 250 most relevant dimensions by g are Computer Sciencerelated terms like software, configure, or Linux. Since ukWaC, the largest corpus we use, is web-based,it makes sense that it has many CS-related terms, which are noise when it comes to hypernymy detectionfor BLESS concepts. Also, we find that while the supervised approach needs the negative informationfrom the g features (for Diff in the U+W2300 space, omitting g features yields a drop from .84 to .8),the unsupervised measures cannot use it. Dropping g features improves invCL results from .58 to .61.The g-based dimensions are explicitly those for which distributional inclusion should not hold, so theyconstitute noise to the unsupervised approaches.The f features can be interpreted as dimensions that characterize hypernyms. An inspection revealstwo clear patterns. First, the features are topically relevant for the BLESS dataset. The 17 concept classesin the dataset belong to three broader groups: animals, plants, and artifacts. An annotation of the 250dimensions by one of the authors showed that 58 dimensions are typical of animals (parasite, extinct), 14typical of vegetables (flora, nutrient), 80 typical of artifacts (repair, mechanical), 49 are general terms(find, worthy), and 49 have no clear interpretation (thee, enigmatic). Second, the features are generalterms. For instance, for animals we find terms like animal, insect, creature, fauna, species, evolutionary,pathogen, nature, ecology. We also find many hypernyms, including many concept class names.Clearly, the selected features are domain dependent; most are directly related to the concepts andconcept classes of BLESS. We expect that our method should work well for other data sets, given its highaccuracy and the strict training procedure. However, these features are unlikely to be global indicators ofhypernymy. This emphasizes the need, in future work, to find a way to automatically determine relevanceon a per-word basis.

Conclusion :
In this paper, we have tested the Distributional Inclusion Hypothesis, the basis for distributional ap-proaches to hypernymy. We have found that the hypothesis only works if inclusion is selectively appliedto a set of relevant dimensions.just by restricting to a smaller space, we evaluated the similarity measures on a variation of the U+W2 space which uses 500randomly selected dimensions from the original space. The results are approximately unchanged from those on the originalU+W2 space.1033We have tested two simple supervised approaches to distributional hypernymy detection and havefound that they show good performance, and are robust to changes in the underlying space. Our bestclassifier achieves .84 accuracy on BLESS and .85 on the ENTAILMENT dataset of Baroni et al. (2012). Ituses features that encode dimension-wise difference between vectors. This classifier can be interpretedas selecting the dimensions necessary for the Distributional Inclusion Hypothesis to work, thus as aneffective way to implement selective distributional inclusion.The next natural step is to use the supervised features to guide development of an unsupervised mea-sure for hypernymy detection: Now that we have examples, we hope to propose a method which selectsrelevant features automatically. We also would like to explore detection of other relationships, suchas meronymy. Finally, we would like to perform an extrinsic evaluation of our hypernymy detectionapproach in an actual RTE system.

Discussion :


Reference :
Marco Baroni and Alessandro Lenci. 2011. How we BLESSed distributional semantic evaluation. In Proceedingsof the GEMS 2011 Workshop on GEometrical Models of Natural Language Semantics, pages 1-10, Edinburgh,UK, July. Association for Computational Linguistics.Marco Baroni, Silvia Bernardini, Adriano Ferraresi, and Eros Zanchetta. 2009. The WaCky wide web: Acollection of very large linguistically processed web-crawled corpora. Language Resources and Evaluation,43(3):209-226.Marco Baroni, Raffaella Bernardi, Ngoc-Quynh Do, and Chung-chieh Shan. 2012. Entailment above the wordlevel in distributional semantics. In Proceedings of the 13th Conference of the European Chapter of the As-sociation for Computational Linguistics, pages 23-32, Avignon, France, April. Association for ComputationalLinguistics.Matthew Berland and Eugene Charniak. 1999. Finding parts in very large corpora. In Proceedings of the 37thAnnual Meeting of the Association for Computational Linguistics, pages 57-64, College Park, Maryland, USA,June. Association for Computational Linguistics.Paul Buitelaar, Philipp Cimiano, and Bernardo Magnini. 2005. Ontology Learning from Text: Methods, Evaluationand Applications. Frontiers in Artificial Intelligence and Applications Series. IOS Press, Amsterdam.Timothy Chklovski and Patrick Pantel. 2004. Verbocean: Mining the web for fine-grained semantic verb relations.In Proceedings of the 2004 Conference on Empirical Methods in Natural Language Processing, pages 33-40.Philipp Cimiano, Aleksander Pivk, Lars Schmidt-Thieme, and Steffen Staab. 2005. Learning taxonomic relationsfrom heterogeneous sources of evidence. Ontology Learning from Text: Methods, evaluation and applications.Daoud Clarke. 2009. Context-theoretic semantics for natural language: an overview. In Proceedings of theWorkshop on Geometrical Models of Natural Language Semantics, pages 112-119, Athens, Greece, March.Association for Computational Linguistics.Maayan Geffet and Ido Dagan. 2004. Feature vector quality and distributional similarity. In Proceedings of the20th International Conference on Computational Linguistics, page 247. Association for Computational Linguis-tics.Roxana Girju, Adriana Badulescu, and Dan Moldovan. 2003. Learning semantic constraints for the automaticdiscovery of part-whole relations. In Proceedings of the 2003 Conference of the North American Chapter of theAssociation for Computational Linguistics on Human Language Technology-Volume 1, pages 1-8. Associationfor Computational Linguistics.10http://www.tacc.utexas.edu1034Roxana Girju, Adriana Badulescu, and Dan Moldovan. 2006. Automatic discovery of part-whole relations. Com-putational Linguistics, 32(1):83-135.Marti A. Hearst. 1992. Automatic acquisition of hyponyms from large text corpora. In Proceedings of the 14thConference on Computational Linguistics, pages 539-545, Stroudsburg, PA, USA. Association for Computa-tional Linguistics.Aurelie Herbelot and Mohan Ganesalingam. 2013. Measuring semantic content in distributional vectors. InProceedings of the 51st Annual Meeting of the Association for Computational Linguistics (Volume 2: ShortPapers), pages 440-445, Sofia, Bulgaria, August. Association for Computational Linguistics.Lili Kotlerman, Ido Dagan, Idan Szpektor, and Maayan Zhitomirsky-geffet. 2010. Directional distributionalsimilarity for lexical inference. Natural Language Engineering, 16:359-389, 10.Alessandro Lenci and Giulia Benotto. 2012. Identifying hypernyms in distributional semantic spaces. In *SEM2012: The First Joint Conference on Lexical and Computational Semantics - Volume 1: Proceedings of themain conference and the shared task, and Volume 2: Proceedings of the Sixth International Workshop on Se-mantic Evaluation (SemEval 2012), pages 75-79, Montreal, Canada, 7-8 June. Association for ComputationalLinguistics.Alessandro Lenci. 2008. Distributional approaches in linguistic and cognitive research. Italian Journal of Lin-guistics, 20(1):1-31.Dekang Lin, Shaojun Zhao, Lijuan Qin, and Ming Zhou. 2003. Identifying synonyms among distributionallysimilar words. In Proceedings of the 18th international Joint Conference on Artificial intelligence, pages 1492-1493.Dekang Lin. 1998. An information-theoretic definition of similarity. In Proceedings of the 15th InternationalConference on Machine Learning, volume 98, pages 296-304.Tomas Mikolov, Wen-tau Yih, and Geoffrey Zweig. 2013. Linguistic regularities in continuous space word rep-resentations. In Proceedings of the 2013 Conference of the North American Chapter of the Association forComputational Linguistics: Human Language Technologies, pages 746-751, Atlanta, Georgia, June. Associa-tion for Computational Linguistics.Gregory L. Murphy. 2002. The Big Book of Concepts. MIT Press, Boston, MA.Patrick Pantel and Marco Pennacchiotti. 2006. Espresso: Leveraging generic patterns for automatically harvestingsemantic relations. In Proceedings of the 21st International Conference on Computational Linguistics and the44th annual meeting of the Association for Computational Linguistics.Fabian Pedregosa, Gael Varoquaux, Alexandre Gramfort, Vincent Michel, Bertran Thirion, Olivier Grisel, MathieuBlondel, Peter Prettenhofer, Ron Weiss, Vincent Dubourg, Jake Vanderplas, Alexandre Passos, David Courna-peau, Matthieu Brucher, MMatthieu Perrot, and Edouard Duchesnay. 2011. Scikit-learn: Machine learning inPython. Journal of Machine Learning Research, 12:2825-2830.Enrico Santus. 2013. SLQS: An entropy measure. Master's thesis, University of Pisa.Rion Snow, Daniel Jurafsky, and Andrew Y. Ng. 2005. Learning syntactic patterns for automatic hypernym dis-covery. In Lawrence K. Saul, Yair Weiss, and Leon Bottou, editors, Advances in Neural Information ProcessingSystems 17, pages 1297-1304, Cambridge, MA. MIT Press.Rion Snow, Daniel Jurafsky, and Andrew Y. Ng. 2006. Semantic taxonomy induction from heterogenous evidence.In Proceedings of the 21st International Conference on Computational Linguistics and the 44th Annual Meetingof the Association for Computational Linguistics, ACL-44, pages 801-808, Stroudsburg, PA, USA. Associationfor Computational Linguistics.Peter Turney and Patrick Pantel. 2010. From frequency to meaning: Vector space models of semantics. Journalof Artificial Intelligence Research, 37:141-188.Peter D. Turney. 2006. Similarity of semantic relations. Computational Linguistics, 32(3):379-416.Julie Weeds and David Weir. 2003. A general framework for distributional similarity. In Michael Collins and MarkSteedman, editors, Proceedings of the 2003 Conference on Empirical Methods in Natural Language Processing,pages 81-88.1035Julie Weeds, David Weir, and Diana McCarthy. 2004. Characterising measures of lexical distributional similarity.In Proceedings of the 20th International Conference on Computational Linguistics, pages 1015-1021, Geneva,Switzerland, Aug 23-Aug 27. Association for Computational Linguistics, COLING.Maayan Zhitomirsky-Geffet and Ido Dagan. 2005. The distributional inclusion hypotheses and lexical entailment.In Proceedings of the 43rd Annual Meeting of the Association for Computational Linguistics, pages 107-114,Ann Arbor, Michigan, June. Association for Computational Linguistics.Maayan Zhitomirsky-Geffet and Ido Dagan. 2009. Bootstrapping distributional feature vector quality. Computa-tional linguistics, 35(3):435-461.1036