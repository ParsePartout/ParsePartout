Nom du fichier :
			C14-1212.pdf
Titre :
			Learning to Distinguish Hypernyms and Co-Hyponyms
Nombre d'auteur :
 			5
Auteurs :
			Julie Weeds
			Daoud Clarke
			Jeremy Reffin
			David Weir
			Bill Keller
Abstract :
			This work is concerned with distinguishing different semantic relations which exist between distributionally similar words. We compare a novel approach based on training a linear Support Vector Machine on pairs of feature vectors with state-of-the-art methods based on distributional similarity. We show that the new supervised approach does better even when there is minimal information about the target words in the training data, giving a 15% reduction in error rate over unsupervised approaches.

Intro :
			Over recent years there has been much interest in the field of distributional semantics, drawing on thedistributional hypothesis: words that occur in similar contexts tend to have similar meanings (Harris,1954). There is a large body of work on the use of different similarity measures (Lee, 1999; Weeds andWeir, 2003; Curran, 2004) and many researchers have built thesauri (i.e. lists of "nearest neighbours")automatically and applied them in a variety of applications, generally with a good deal of success.In early research there was much interest in how these automatically generated thesauri compare withhuman-constructed gold standards such as WordNet and Roget (Lin, 1998; Kilgarriff and Yallop, 2000).More recently, the focus has tended to shift to building thesauri to alleviate the sparse-data problem. Dis-tributional thesauri have been used in a wide variety of areas including sentiment classification (Bollegalaet al., 2011), WSD (Miller et al., 2012; Khapra et al., 2010), textual entailment (Berant et al., 2010), pre-dicting semantic compositionality (Bergsma et al., 2010), acquisition of semantic lexicons (McIntosh,2010), conversation entailment (Zhang and Chai, 2010), lexical substitution (Szarvas et al., 2013), tax-onomy induction (Fountain and Lapata, 2012), and parser lexicalisation (Rei and Briscoe, 2013).A primary focus of distributional semantics has been on identifying words which are similar to eachother. However, semantic similarity encompasses a variety of different lexico-semantic and topical re-lations. Even if we just consider nouns, an automatically generated thesaurus will tend to return a mixof synonyms, antonyms, hyponyms, hypernyms, co-hyponyms, meronyms and other topically relatedwords. A central problem here is that whilst most measures of distributional similarity are symmetric,some of the important semantic relations are not. The hyponymy relation (and converse hypernymy)which forms the ISA backbone of taxonomies and ontologies such as WordNet (Fellbaum, 1989), anddetermines lexical entailment (Geffet and Dagan, 2005), is asymmetric. On the other hand, the co-hyponymy relation which relates two words unrelated by hyponymy but sharing a (close) hypernym, issymmetric, as are synonymy and antonymy. Table 1 shows the distributionally nearest neighbours of thewords cat, animal and dog. In the list for cat we can see 2 hypernyms and 13 co-hyponyms1.1We read cat in the sense domestic cat rather than big cat, hence tiger is a co-hyponym rather than hyponymof cat.This work is licensed under a Creative Commons Attribution 4.0 International Licence. Page numbers and proceedingsfooter are added by the organisers. Licence details: http://creativecommons.org/licenses/by/4.0/2249cat dog 0.32, animal 0.29, rabbit 0.27, bird 0.26, bear 0.26, monkey 0.26, mouse 0.25, pig 0.25,snake 0.24, horse 0.24, rat 0.24, elephant 0.23, tiger 0.23, deer 0.23, creature 0.23animal bird 0.36, fish 0.34, creature 0.33, dog 0.31, horse 0.30, insect 0.30, species 0.29, cat 0.29,human 0.28, mammal, 0.28, cattle 0.27, snake 0.27, pig 0.26, rabbit 0.26, elephant 0.25dog cat 0.32, animal 0.31, horse 0.29, bird 0.26, rabbit 0.26, pig 0.25, bear 0.26, man 0.25, fish0.24, boy 0.24, creature 0.24, monkey 0.24, snake 0.24, mouse 0.24, rat 0.23Table 1: Top 15 neighbours of cat, animal and dog generated using Lin's similarity measure (Lin,1998) considering all words and dependency features occurring 100 or more times in Wikipedia.Distributional similarity is being deployed (e.g., Dinu and Thater (2012)) in situations where it canbe useful to be able to distinguish between these different relationships. Consider the following twosentences.The cat ran across the road. (1)The animal ran across the road. (2)Sentence 1 textually entails sentence 2, but sentence 2 does not textually entail sentence 1. The abilityto determine whether entailment holds between the sentences, and in which direction, depends on theability to identify hyponymy. Given a similarity score of 0.29 between cat and animal, how do weknow which is the hyponym and which is the hypernym?In applying distributional semantics to the problem of textual entailment, there is a need to generaliselexical entailment to phrases and sentences. Thus, the ability to distinguish different semantic relationsis crucial if approaches to the composition of distributional representations of meaning that are currentlyreceiving considerable interest (Widdows, 2008; Mitchell and Lapata, 2008; Baroni and Zamparelli,2010; Grefenstette et al., 2011; Socher et al., 2012; Weeds et al., 2014) are to be applied to the textualentailment problem.We formulate the challenge as follows: Consider a set of pairs of similar words A, B where one ofthree relationships hold between A and B: A lexically entails B, B lexically entails A or A and B arerelated by co-hyponymy. Given such a set, how can we determine which relationship holds? In Section2, we discuss existing attempts to address this problem through the use of various directional measuresof distributional similarity.This paper considers the effectiveness of various supervised approaches, and makes the followingcontributions. First, we show that a SVM can distinguish the entailment and co-hyponymy relations,achieving a significant reduction in error rate in comparison to existing state-of-the-art methods basedon the notion of distributional generality. Second, by comparing two different data sets, one built fromBLESS (Baroni and Lenci, 2011) and the other from WordNet (Fellbaum, 1989), we derive importantinsights into the requirements of a valid evaluation of supervised approaches, and provide a data setfor further research in this area. Third, we show that when learning how to determine an ontologicalrelationship between a pair of similar words by means of the word's distributional vectors, quite differentvector operations are useful when identifying different ontological relationships. In particular, using thedifference between the vectors for pairs of words is appropriate for the entailment task, whereas addingthe vectors works well for the co-hyponym task.

Corps :			2 Related WorkLee (1999) noted that the substitutability of one word for another was asymmetric and proposed thealpha-skew divergence measure, an asymmetric version of the Kullback-Leibler divergence measure. Shefound that this measure improved results in language modelling, when a word's distribution is smoothedusing the distributions of its nearest neighbours.Weeds et al. (2004) proposed a notion of distributional generality, observing that more general wordstend to occur in a larger variety of contexts than more specific words. For example, we would expect to beable to replace any occurrence of cat with animal and so all of the contexts of cat must be plausible2250contexts for animal. However, not all of the contexts of animal would be plausible for cat, e.g.,"the monstrous animal barked at the intruder". Weeds et al. (2004) attempt to capture this asymmetryby framing word similarity in terms of co-occurrence retrieval (Weeds and Weir, 2003), where precisionand recall are defined as:Pww(u, v) =fF(u)F(v)I(u, f)fF(u)I(u, f)and Rww(u, v) =fF(u)F(v)I(v, f)fF(v)I(v, f)where I(n, f) is the pointwise mutual information (PMI) between noun n and feature f and F(n) is theset of all features f for which I(n, f) > 0.By comparing the precision and recall of one word's retrieval of another word's contexts, they wereable to successfully identify the direction of an entailment relation in 71% of pairs drawn from WordNet.However, this was not significantly better than a baseline which proposed that the most frequent wordwas the most general.Clarke (2009) formalised the idea of distributional generality using a partially ordered vector space.He also argued for using a variation of co-occurrence retrieval where precision and recall are defined as:Pcl(u, v) =fF(u)F(v)min(I(u, f), I(v, f))fF(u)I(u, f)and Rcl(u, v) =fF(u)F(v)min(I(u, f), I(v, f))fF(v)I(v, f)Lenci and Benotto (2012) took the notion further and hypothesised that more general terms shouldhave high recall and low precision, which would thus make it possible to distinguish them from otherrelated terms such as synonyms and co-hyponyms. They proposed a variant of the Clarke (2009) measureto identify hypernyms:invCL(u, v) = 2 Pcl(u, v)  (1 - Rcl(u, v))Evaluation on the BLESS data set (Baroni and Lenci, 2011), showed that this measure is better at distin-guishing hypernyms from other relations than the measures of Weeds et al. (2004) and Clarke (2009).Geffet and Dagan (2005) proposed an approach based on feature inclusion, which extends the rationaleof Weeds et al. (2004) to lexical entailment. Using data from the web they demonstrated a strong cor-relation between complete inclusion of prominent features and lexical entailment. However, they wereunable to assess this using an off-line corpus due to data sparseness.Szpektor and Dagan (2008) found that the Pww measure tends to promote relationships between infre-quent words with narrow vectors (i.e. those with relatively few distinct context features). They proposedusing the geometric average of Pww and the symmetric similarity measure of Lin (1998) in order topenalise low frequency words.Kotlerman et al. (2010) apply the IR evaluation method of Average Precision to the problem of identi-fying lexical inference and use the balancing approach of Szpektor and Dagan (2008) to demote similar-ities for narrow feature vectors; their measure is called balAPinc. They show that all of the asymmetricsimilarity measures previously proposed perform much better than symmetric similarity measures ona directionality detection experiment, and that their method and that of Clarke (2009) outperform theothers with statistical significance. They also show that their measure is superior when used for termexpansion in an event detection task.Baroni et al. (2012) investigate the relation between phrasal and lexical entailment, and demonstratethat support vector machines can generalise entailment relations between quantifier phrases to entailmentinvolving unseen quantifiers. They compare the performance of their system with the balAPinc measure.The Stanford WordNet project (Snow et al., 2004) expands the WordNet taxonomy by analysing largecorpora to find patterns that are indicative of hyponymy. For example, the pattern "NPX and other NPY "is an indication that NPX is a NPY , i.e. that NPX is a hyponym of NPY . They use machine learningto identify other such patterns from known hyponym-hypernym pairs, and then use these patterns to findnew relations in the corpus. The transitivity relation of the taxonomy is enforced by searching only overvalid taxonomies and evaluating the likelihood of each taxonomy given the available evidence (Snow2251et al., 2006). The approach is similar to ours in providing a supervised method of learning semanticrelations, but relies on having features for occurrences of pairs of terms rather than just vectors for termsthemselves. Our approach is therefore more generally applicable to systems which compose distribu-tional representations of meaning.Most recently, Rei and Briscoe (2013) note that hyponyms are well suited for lexical substitution.In their experiments with smoothing edge scores for parser lexicalisation, they find that a directionalsimilarity measure, WeightedCosine2, performs best. Also of note, Mikolov et al. (2013) propose a vectoroffset method to capture syntactic and semantic regularities between word representations learnt by arecurrent neural network language model. Yih et al. (2012) present a method for distinguishing synonymsand antonyms by inducing polarity in a document-term matrix before applying Latent Semantic Analysis.Santus et al. (2014) propose identifying hypernyms using a new measure based on entropy, SLQS, whichis based on the hypothesis that the most typical linguistic contexts of a hypernym are less informativethan the most typical linguistic contexts of its hyponyms. Evaluated on pairs extracted from the BLESSdataset (Baroni and Lenci, 2011), this measure outperforms Pww at both discriminating hypernym testpairs from other types of relation and at determining the direction of the entailment relation.3 MethodologyThe code used to perform our experiments has been open sourced, and is available online.33.1 Vector RepresentationsDistributional information was collected for all of the nouns from Wikipedia provided they had oc-curred 100 or more times. We used a Wikimedia dump of Wikipedia from June 2011 and extractedtext using wp2txt4. This was part-of-speech tagged, lemmatised and dependency parsed using the MaltParser (Nivre, 2004). All major grammatical dependency relations involving open class parts of speech(nsubj, dobj, iobj, conj, amod, nnmod) and also occurring 100 or more times were ex-tracted as features of the POS-tagged and lemmatised nouns. The value of each feature is the positivepoint wise mutual information (PPMI) (Church and Hanks, 1989) between the noun and the feature. Thetotal number of noun vectors which can be harvested from Wikipedia with these parameters is 124, 345.Our goal is to build classifiers that establish whether or not a given semantic relation, rel, holds be-tween two similar words A and B. Support vector machines (SVMs), which are effective across a varietyof classification scenarios, learn a boundary between two classes from a set of positive and negative ex-ample vectors. The two classes correspond to the relation rel holding or not holding. Here, however, wedo not start with a single vector, but with two distributional vectors vA and vB for the words A and B,respectively. These vectors must be combined in some way to produce the SVM's input, and a numberof ways were considered, defined in Table 2. Of these operations, the vector difference (used by svm-DIFF and knnDIFF) and direct sum (used by svmCAT) are asymmetric, whereas the sum and pointwisemultiplication (used by svmADD and svmMULT) are symmetric.We now motivate the use of each of these operations. First, we note that pointwise multiplication(svmMULT) is intersective. Similar vectors will have a large intersection and it might be possible tolearn the features that nouns occurring in different semantic relations should share. However, it doesnot retain any information about non-shared features and it is symmetric so it is difficult to see how itwould be possible to use it to distinguish hypernyms from hyponyms. Pointwise addition (svmADD)effectively performs the union of the features, giving emphasis to the shared features. Whilst it doesretain information about the non-shared features, it is also symmetric, making it difficult again to seehow it would be useful in determining the direction of an entailment relationVector difference (as used in svmDIFF and knnDIFF), on the other hand, is asymmetric. Further,we might expect a small difference vector (containing many zeroes) to be indicative of similar nouns.Further, considering the majority sign of features in this difference vector might indicate the direction of2The details of this measure are unpublished.3https://github.com/SussexCompSem/learninghypernyms4https://github.com/yohasebe/wp2txt2252entailment. Using an SVM, we might expect to be able to effectively learn which of these features shouldbe ignored and which should be combined, to decide the correct direction of entailment in the majoritynumber of cases in our training data. However, note that if one uses vector difference it is impossible todistinguish between the case where a feature occurred with both nouns (to the same extent) and the casewhere a feature occurs with neither noun. Accordingly, a small difference vector may indicate that bothnouns do not occur in many distinct contexts. A possible solution to this problem is to use the directsum of the vectors (i.e., the concatenation of the two vectors) which retains all of the information fromthe original vectors. Finally, we consider the use of the single vector corresponding to the second word(svmSING) as a baseline. High performance by this operation would indicate that we can learn featuresof words which tend to be hypernyms (or co-hyponyms) without any regard to the other word in theputative relationship.We also note that the behaviour of these methods may differ depending on the weighting used for vec-tors. For example, PMI is the log of a ratio of probabilities and therefore one might expect vector additionwhere vectors are weighted using PMI to correspond to multiplication where vectors are weighted usingfrequency or probability. However, the use of positive PMI (where negative PMI scores are regardedequal to zero), which is consistent with other work in this area, means that this correspondence is lost.Because of the nature of our datasets, we were concerned that systems could learn information aboutthe taxonomy from the relations in the training data, without making use of information in the vectorsthemselves. To investigate this, we constructed random vectors to be used in place of the vectors derivedfrom Wikipedia. The dimensionality of the random vectors was chosen to be 1000 since this substantiallyexceeds the average number (398) of non-zero features in the Wikipedia vectors.3.2 ClassifiersWe constructed linear SVMs for each of the vector operations outlined in Section 3.1. We used linearSVMs for speed and simplicity, since the point is to compare the different vector representations ofthe pairings. For comparison, we also constructed a number of supervised, unsupervised, and weaklysupervised classifiers. These are listed in Table 2. For the linear SVMs and kNN classifier, we used thescikit-learn implementations with default settings. For k nearest neighbours, we performed a parametersearch, using nested cross-validation, varying k between 1 and 50.For weakly supervised approaches, we evaluated the measure on the training set, then found the bestthreshold p on the training set that best divides the two classes using that measure. When classifying, wedetermine that the relation holds if the value of the measure exceeds p.svmDIFF A linear SVM trained on the vector difference vB - vAsvmMULT A linear SVM trained on the pointwise product vector vB  vAsvmADD A linear SVM trained on the vector sum vB + vAsvmCAT A linear SVM trained on the vector concatenation vB  vAsvmSING A linear SVM trained on the vector vBknnDIFF k nearest neighbours (knn) trained on the vector difference vB - vA.1 < k < 50widthdiff width(B) > width(A)  rel(A, B) where width(A) is number of non-zero features in Asinglewidth width(B) > p  rel(A, B)cosineP simcos(A, B) > p  rel(A, B) where simcos(A, B) is cosine similarity using PPMIlinP simlin(A, B) > p  rel(A, B) (Lin, 1998)CRdiff Pww(A, B) > Rww(A, B)  rel(A, B) (Weeds et al., 2004)clarkediff Pcl(A, B) > Rcl(A, B)  rel(A, B) (Clarke, 2009)invCLP invCL(A, B) > p  rel(A, B) (Lenci and Benotto, 2012)balAPincP balAPinc(A, B) > p  rel(A, B) (Kotlerman et al., 2010)most freq The most frequent label in the training data is assigned to every test point.Table 2: Implemented classifiers22533.3 Data SetsOne of key the challenges of this work has been to construct a data set which accurately and validly testsour hypotheses. All four of our datasets detailed below are available online 5.In order to test our hypotheses, a data set needs to be balanced in many respects in order to prevent thesupervised classifiers making use of artefacts of the data. This would not only make it unfair to comparethe supervised approaches with the unsupervised approaches, but also make it unlikely that our resultswould be generalisable to other data. Here, we outline the requirements for the data sets, the importanceof which is demonstrated by our initial results for a data set which does not satisfy all of them.There should be an equal number of positive and negative examples of a semantic relation. Thus,random guessing or labelling with the most frequently seen label in the training data will yield 50%accuracy and precision. An advantage of incorporating this requirement means that evaluation can be interms of simple accuracy (or error rate).It should not be possible to do well simply by considering the distributional similarity of the terms.Hence, the negative examples need to be pairs of equally similar words, but where the relationship underconsideration does not hold.It should not be possible to do well by pre-supposing an entailment relation and guessing the direction.For example, it has been shown (Weeds et al., 2004) that given a pair of entailing words selected fromWordNet, over 70% of the time the more frequent word is also the entailed word.It should not be possible to do well using ontological information learnt about one or both of thewords from the training data that is not generalisable to their distributional representations. For example,it should not be possible for the classifier simply to learn directly from the training pairs cat ISAmammal and mammal ISA animal that cat ISA animal . Furthermore, we must ensure thata classifier cannot learn that a particular word is near the top of the ontological hierarchy, and, as aresult, do well by guessing that a particular pairing probably has an entailment relation. For example,given many pairs such as cat ISA animal , dog ISA animal , a system which guessed rabbitISA animal but not animal ISA rabbit would do better than random guessing. Whilst bothof these types of information could be useful in a hybrid system, they do not require any distributionalinformation and therefore we would not be learning anything about the distributional features of animalwhich make it likely to be a hypernym.3.3.1 BLESSWe have constructed two data sets from BLESS (Baroni and Lenci, 2011) which is a collection of ex-amples of hypernyms, co-hyponyms, meronyms and random unrelated words for each of 200 concrete,largely monosemous nouns. We will refer to these 200 nouns as the BLESS concepts.hyponymBLESSis a set of 1976 labelled pairs of nouns. For each BLESS concept, 80% of the hypernymswere randomly selected to provide positive examples of entailment. The remaining hypernyms for thegiven concept were reversed and taken with the same number of co-hyponyms, meronyms and randomwords to form negative examples of entailment. A filter was applied to ensure that duplicate pairs werenot included (e.g., if cat, animal is a positive pair then animal, cat cannot be a negative pair).cohyponymBLESSis a set of 5835 labelled pairs of nouns. For each BLESS concept, the co-hyponymswere taken as positive examples of this relation. The same total number of (and split evenly between)hypernyms, meronyms and random words was taken to form the negative examples. The order of 50%of the pairs was reversed and again duplicate pairs were disallowed.In both cases the pairs are labelled as positive or negative for the specified semantic relation and inboth cases there are equal (1) numbers of positive and negative examples. For 99% of the generatedBLESS pairs, both nouns had associated vectors harvested from Wikipedia. If a noun does not have anassociated vector, the classifiers use a zero vector.5https://github.com/SussexCompSem/learninghypernyms22543.3.2 WordNetWe constructed two data sets using WordNet. Whilst these data sets are similar in size to the BLESSdata sets they more adequately satisfy the requirements laid out above6. We constructed a list of all non-rare, largely monosemous, single word terms in WordNet. To be considered non-rare, a word needed tohave occurred in SemCor at least once (i.e. frequency information is provided about it in the WordNetpackage) and to have occurred in Wikipedia at least 100 times. To be considered largely monosemous,the predominant sense of the word needed to account for over 50% of the occurrences in the SemCorfrequency information provided with WordNet. This led to a list of 7613 nouns.hyponymWNis a set of 2564 labelled pairs of nouns constructed in the following way. Pairs A, B werefound in the list of nouns where B is an ancestor of A (i.e., A lexically entails B). Each found pair isadded either as a positive or a negative in the ratio 2:1 provided that the reverse pairing has not alreadybeen added and provided that each word has not previously been used in that position. Co-hyponympairs (i.e., words which share a direct hypernym) were also found within the list of nouns. Each foundpair is added to the data set (as a negative) provided the reverse pairing has not already been added, andprovided that neither word has already been seen in that position in a pairing (either in the entailmentpairs or the co-hyponym pairs). The same number of co-hyponym pairs as hypernym-hyponym negativesis selected. This provides a balanced data set where half of the pairs are positive examples of entailmentand the other half are semantically similar but not entailing.cohyponymWNis a set of 3771 labelled pairs of nouns. It was constructed in the same way as hyponymWNexcept the same number of co-hyponym pairs were selected as the total number of entailment pairs (ineither direction). These co-hyponym pairs were labelled as positive and the entailment pairs were labelledas negative. Thus, this provides a balanced data set where half of the pairs are positive examples of co-hyponyms and the other half, the negative examples, are entailment pairs (with direction unspecified)In both these sets, the average path distance between entailment pairs is 1.64, whereas path distancebetween co-hyponym pairs is 2.3.4 Experimental SetupMost of our experiments were carried out using an implementation of five-fold cross-validation usingeach combination of data set, vector set and classifier. In this setup, the pairs are randomly partitionedinto five subsets, one subset is held out for testing whilst the classifiers are trained on the remaining four,and this process is repeated using each subset as the test set.In initial experiments with the BLESS datasets, the SVM classifiers were able to achieve classificationaccuracy of over 95% for hyponymBLESSand over 90% for cohyponymBLESS. However, the results us-ing random vectors were not significantly different from using the distributional vectors harvested fromWikipedia. This indicated that the classifiers were learning ontological information implicit in the train-ing data. In order to address this, when using the BLESS datasets, we removed any pair from the trainingdata if either word was present in the test data. In order to preserve a reasonable amount of training data,we implemented this approach with ten-fold cross-validation. In all subsequent experiments, across alldatasets and classifiers, we found performance by the random vectors was no higher than 52%. Thisindicates that the performance seen in Table 3 is due to learning from distributional features rather thanany ontological information implicit in the training set.4 ResultsIn Table 3, we compare average accuracy for a number of different classifiers on each of two tasks,distinguishing hyponyms and distinguishing co-hyponyms, on each of the two datasets.Looking at the results for the hyponymBLESSdata set, we can see that the SVM methods do generallyoutperform the unsupervised methods. However, the best performing model is svmSING, suggestingthat, for this data set, it is best to try to learn the distributional features of more general terms, rather thancomparing the vector representations of the two terms under consideration.6Note that imposing these requirements on the BLESS data sets would lead to very small data sets, since information is onlyprovided for 200 nouns.2255dataset svmDIFF svmMULT svmADD svmCAT svmSING knnDIFFhyponymBLESS0.74 0.56 0.66 0.68 0.75 0.54cohyponymBLESS0.62 0.39 0.41 0.40 0.40 0.58hyponymWN0.75 0.45 0.37 0.74 0.69 0.50cohyponymWN0.37 0.60 0.68 0.64 0.58 0.50dataset most freq cosineP linP widthdiff singlewidth CRdiff invCLP balAPincPhyponymBLESS0.54 0.53 0.54 0.56 0.58 0.52 0.54 0.54cohyponymBLESS0.61 0.79 0.78 - - - - -hyponymWN0.50 0.53 0.52 0.70 0.65 0.70 0.66 0.53cohyponymWN0.50 0.50 0.55 - - - - -Table 3: Accuracy Figures for the data sets generated from BLESS and WordNet (standard errors <0.02). For cohyponyms, results for measures designed to detect hyponymy have been omitted. We alsoomit results of clarkediff as these were consistently the same or less than CRdiff.On the corresponding co-hyponym task, using the cohyponymBLESSdata set, we see the best performingclassifier is the cosine measure. The cosine measure is able to perform relatively well here because asubstantial proportion of the negative examples (25%) are random unrelated words which will have lowcosine scores. It is also consistent with earlier work (e.g., (Lenci and Benotto, 2012)) which suggeststhat measures such as the cosine measure "prefer" words in symmetric semantic relationships such as co-hyponymy. The poor performance of the SVM methods here can perhaps be explained by the paucity ofthe training data in this experimental set up with this data set. If, for example, our test concept is robin,our approach requires that we will not have any training pairs containing robin, or any training pairscontaining any of the words to which robin is related in the test set. In a dataset as small as BLESS,this requirement effectively removes all knowledge of the distributional features of words in the targetdomain. Hence, the need for a larger dataset as we have extracted from WordNet.Looking at the results for the hyponymWNdata set, the directional SVM methods (svmDIFF and svm-CAT) substantially outperform the symmetric SVM methods, and their performance is significantly better(at the 0.01% level) than the unsupervised methods. Also of note is the substantial difference betweensvmDIFF and knnDIFF. Both of these methods are trained on the differences of vectors. However, thelinear SVM outperforms kNN by 19-25%. This may suggest that the shape of the vector space inhabitedby the positive entailment pairs is particularly conducive for learning a linear SVM. Positive and negativepairs are close together (as evidenced by the poor performance of kNN), but generally linearly separable.Looking at the results for the cohyponymWNdata set, it is clear that the unsupervised methods cannotdistinguish the co-hyponym pairs from the entailing pairs. The supervised SVM methods do substantiallybetter, with the best performance achieved by svmADD and svmCAT. Both of these methods essentiallyretain information about all of the features of both words. svmMULT does much better than svmDIFF,which suggests that the shared features are more indicative than the non-shared features for this task.The reasonably high performance of svmSING on both data sets suggests that words which have co-hyponyms in the data set tend to inhabit a somewhat different part of the feature space to words whichare included as entailed words in the data set. We hypothesise that there are specific features which moregeneral words tend to share (regardless of their topic) which makes it possible to identify more generalwords from more specific words. This is completely consistent with very recent results using SLQS, anew entropy-based measure (Santus et al., 2014). Here, the authors hypothesise that the most typicalcontexts of a hypernym are less informative than the most typical linguistic contexts of its hyponyms,with some promising results. It would be plausible to hypothesise that svmSING is learning which nounstypically have less informative contexts and are therefore likely to by hypernyms.Given prior work, the performance of the balAPincP measure is lower than expected on thehyponymWNdataset. Our task is slightly different to that of (Kotlerman et al., 2010), since we are deter-mining the existence (or not) of hyponymy, rather than the direction of entailment for pairs where it isknown that a relationship exists. It could be that the measure is particularly suited to the latter task.2256

Conclusion :
We have shown that it is possible to predict to a large extent whether or not there is a specific semanticrelation between two words given their distributional vectors, using a supervised approach based onlinear SVMs. The increase in accuracy over unsupervised methods is significant at the 0.01% level andcorresponds to a substantial absolute reduction in error rate (over 15%).We have also shown that the choice of vector operation is significant. Whilst concatenating the vectors,and therefore retaining all of the information from both vectors including direction, generally performswell, we have also shown that different vector operations are useful in establishing different relationships.In particular, the vector difference operation, which loses information about the original vectors, achievedperformance indistinguishable from concatenation on the entailment task, where the classifier is requiredto distinguish hyponyms from other semantically related words including hypernyms. On the otherhand, the addition operation, which also loses information, outperformed concatenation by 4% (whichis statistically significant at the 0.01% level) on the coordinate task, where the classifier is required todistinguish co-hyponyms from hyponyms and hypernyms. Hence the nature of the relationship one istrying to establish between words determines the nature of the operation one should perform on theirassociated vectors.We have also shown that it is possible to outperform state-of-the-art unsupervised methods even whena data set has been constructed without ontological information, and when target words have not previ-ously been seen in that position of a relationship in the training data. Hence, we believe the supervisedmethods are learning characteristics of the underlying feature space which are generalisable to new words(inhabiting the same feature space).In future work, we intend to apply this approach to the problem of labelling the distributional neigh-bours found for a given word with specific semantic relations. We also plan to investigate the use ofbag-of-words (windowed) vectors instead of grammatical relations for this task.Finally, we believe that the data sets constructed from WordNet, which we publish alongside thispaper, can be used as a useful benchmark in evaluating future advances in this area, both for supervisedand unsupervised methods.

Discussion :


Reference :
Marco Baroni and Alessandro Lenci. 2011. How we BLESSed distributional semantic evaluation. In Proceedingsof the GEMS 2011 workshop on Geometric Models of Natural Language Semantics, EMNLP 2011.Marco Baroni and Roberto Zamparelli. 2010. Nouns are vectors, adjectives are matrices: Representing adjective-noun constructions in semantic space. In Proceedings of the 2010 Conference on Empirical Methods in NaturalLanguage Processing.Marco Baroni, Raffaella Bernardi, Ngoc-Quynh Do, and Chung-chieh Shan. 2012. Entailment above the wordlevel in distributional semantics. In Proceedings of the 13th Conference of the European Chapter of the Associ-ation for Computational Linguistics, pages 23-32. Association for Computational Linguistics.Jonathan Berant, Ido Dagan, and Jacob Goldberger. 2010. Global learning of focused entailment graphs. InProceedings of the 48th Annual Meeting of the Association for Computational Linguistics, pages 1220-1229,Uppsala, Sweden, July. Association for Computational Linguistics.Shane Bergsma, Aditya Bhargava, Hua He, and Grzegorz Kondrak. 2010. Predicting the semantic composi-tionality of prefix verbs. In Proceedings of the 2010 Conference on Empirical Methods in Natural LanguageProcessing, pages 293-303, Cambridge, MA, October. Association for Computational Linguistics.Danushka Bollegala, David Weir, and John Carroll. 2011. Using multiple sources to construct a sentiment sen-sitive thesaurus for cross-domain sentiment classification. In Proceedings of the 49th Annual Meeting of theAssociation for Computational Linguistics: Human Language Technologies (ACL-HLT 2011).2257Kenneth Ward Church and Patrick Hanks. 1989. Word association norms, mutual information, and lexicography.In Proceedings of the 27th Annual Meeting on Association for Computational Linguistics, ACL '89, pages76-83, Stroudsburg, PA, USA. Association for Computational Linguistics.Daoud Clarke. 2009. Context-theoretic semantics for natural language: an overview. In Proceedings of theWorkshop of Geometric Models for Natural Language Semantics.James Curran. 2004. From Distributional to Semantic Similarity. Ph.D. thesis, University of Edinburgh.Georgiana Dinu and Stefan Thater. 2012. Saarland: Vector-based models of semantic textual similarity. InProceedings of the First Joint Conference on Lexical and Computational Semantics.Christaine Fellbaum, editor. 1989. WordNet: An Electronic Lexical Database. The MIT Press, Cambridge,Massachusetts.Trevor Fountain and Mirella Lapata. 2012. Taxonomy induction using hierarchical random graphs. In Proceed-ings of the 2012 Conference of the North American Chapter of the Association for Computational Linguistics:Human Language Technologies, pages 466-476, Montreal, Canada, June.Maayan Geffet and Ido Dagan. 2005. Lexical entailment and the distributional inclusion hypothesis. In Proceed-ings of the 43rd meeting of the Association for Computational Liuguistics (ACL), pages 107-114.Edward Grefenstette, Mehrnoosh Sadrzadeh, Stephen Clark, Bob Coecke, and Stephen Pulman. 2011. Concretesentence spaces for compositional distributional models of meaning. Proceedings of the 9th International Con-ference on Computational Semantics (IWCS 2011), pages 125-134.Zelig Harris. 1954. Distributional structure. Word, 10:146-162.Mitesh Khapra, Anup Kulkarni, Saurabh Sohoney, and Pushpak Bhattacharyya. 2010. All words domain adaptedWSD: Finding a middle ground between supervision and unsupervision. In Proceedings of the 48th AnnualMeeting of the Association for Computational Linguistics, pages 1532-1541, Uppsala, Sweden, July.Adam Kilgarriff and Colin Yallop. 2000. What's in a thesaurus? In Proceedings of the 2nd InternationalConference on Language Resources and Evaluation (LREC2000).Lili Kotlerman, Ido Dagan, Idan Szpektor, and Maayan Zhitomirsky-Geffet. 2010. Directional distributional simi-larity for lexical inference. Special Issue of Natural Language Engineering on Distributional Lexical Semantics,4(16):359-389.Lillian Lee. 1999. Measures of distributional similarity. In Proceedings of the 37th Annual Meeting of theAssociation for Computational Linguistics, pages 25-32, College Park, Maryland, USA, June.Alessandro Lenci and Giulia Benotto. 2012. Identifying hypernyms in distributional semantic spaces. In Proceed-ings of the First Joint Conference on Lexical and Computational Semantics (*Sem).Dekang Lin. 1998. Automatic retrieval and clustering of similar words. In Proceedings of the 17th InternationalConference on Computational Linguistics (COLING 1998).Tara McIntosh. 2010. Unsupervised discovery of negative categories in lexicon bootstrapping. In Proceedings ofthe 2010 Conference on Empirical Methods in Natural Language Processing, pages 356-365, Cambridge, MA,October. Association for Computational Linguistics.Tomas Mikolov, Wen-tau Yih, and Geoffrey Zweig. 2013. Linguistic regularities in continuous space word rep-resentations. In Proceedings of the 2013 Conference of the North American Chapter of the Association forComputational Linguistics: Human Language Technologies, pages 746-751, Atlanta, Georgia, June.Tristan Miller, Chris Biemann, Torsten Zesch, and Iryna Gurevych. 2012. Using distributional similarity forlexical expansion in knowledge-based word sense disambiguation. In Proceedings of COLING 2012, pages1781-1796, Mumbai, India, December.Jeff Mitchell and Mirella Lapata. 2008. Vector-based models of semantic composition. In Proceedings of ACL-08:HLT, pages 236-244, Columbus, Ohio, June. Association for Computational Linguistics.Joakim Nivre. 2004. Incrementality in deterministic dependency parsing. In Proceedings of the ACL workshop onIncremental Parsing, pages 50-57.2258Marek Rei and Ted Briscoe. 2013. Parser lexicalisation through self-learning. In Proceedings of the 2013 Con-ference of the North American Chapter of the Association for Computational Linguistics: Human LanguageTechnologies, pages 391-400, Atlanta, Georgia, June. Association for Computational Linguistics.Enrico Santus, Alessandro Lenci, Qin Lu, and Sabine Schulte Im Walde. 2014. Chasing hypernyms in vectorspaces with entropy. In Proceedings of the 14th Conference of the European Chapter of the Association forComputational Linguistics, pages 38-42, Gothenburg, Sweden, April.Rion Snow, Daniel Jurafsky, and Andrew Y Ng. 2004. Learning syntactic patterns for automatic hypernymdiscovery. Advances in Neural Information Processing Systems 17.Rion Snow, Daniel Jurafsky, and Andrew Y Ng. 2006. Semantic taxonomy induction from heterogenous evidence.In Proceedings of the 21st International Conference on Computational Linguistics and the 44th annual meetingof the Association for Computational Linguistics, pages 801-808. Association for Computational Linguistics.Richard Socher, Brody Huval, Christopher D Manning, and Andrew Y Ng. 2012. Semantic compositionalitythrough recursive matrix-vector spaces. In Proceedings of the 2012 Joint Conference on Empirical Methods inNatural Language Processing and Computational Natural Language Learning, pages 1201-1211.Gyorgy Szarvas, Chris Biemann, and Iryna Gurevych. 2013. Supervised all-words lexical substitution usingdelexicalized features. In Proceedings of the 2013 Conference of the North American Chapter of the Associationfor Computational Linguistics: Human Language Technologies, pages 1131-1141, Atlanta, Georgia, June.Idan Szpektor and Ido Dagan. 2008. Learning entailment rules for unary templates. In Proceedings of the22nd International Conference on Computational Linguistics (Coling 2008), pages 849-856, Manchester, UK,August.Julie Weeds and David Weir. 2003. A general framework for distributional similarity. In Michael Collins and MarkSteedman, editors, Proceedings of the 2003 Conference on Empirical Methods in Natural Language Processing,pages 81-88.Julie Weeds, David Weir, and Diana McCarthy. 2004. Characterising measures of lexical distributional similarity.In Proceedings of Coling 2004, pages 1015-1021, Geneva, Switzerland, Aug 23-Aug 27. COLING.Julie Weeds, David Weir, and Jeremy Reffin. 2014. Distributional composition using higher-order dependencyvectors. In Proceedings of the 2nd Workshop on Continuous Vector Space Models and their Compositionality,EACL 2014, Gothenburg, Sweden, April.Dominic Widdows. 2008. Semantic vector products: Some initial investigations. In Proceedings of the SecondSymposium on Quantum Interaction, Oxford, UK, pages 1-8.Wen-tau Yih, Geoffrey Zweig, and John Platt. 2012. Polarity inducing latent semantic analysis. In Proceedings ofthe 2012 Joint Conference on Empirical Methods in Natural Language Processing and Computational NaturalLanguage Learning, pages 1212-1222, Jeju Island, Korea, July. Association for Computational Linguistics.Chen Zhang and Joyce Chai. 2010. Towards conversation entailment: An empirical investigation. In Proceedingsof the 2010 Conference on Empirical Methods in Natural Language Processing, pages 756-766, Cambridge,MA, October. Association for Computational Linguistics.2259