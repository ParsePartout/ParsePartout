intro = 1 Introduction The goal of Automatic Speech Recognition (ASR) is to transform spoken data into a written representation, thus enabling natural human-machine interaction [33] with further Natural Language Processing (NLP) tasks. Machine transla- tion, question answering, semantic parsing, POS tagging, sentiment analysis and automatic text summarization; originally developed to work with formal writ- ten texts, can be applied over the transcripts made by ASR systems [2,25,31]. However, before applying any of these NLP tasks a segmentation process called Sentence Boundary Detection (SBD) should be performed over ASR transcripts to reach a minimal syntactic information in the text. To measure the performance of a SBD system, the automatically segmented transcript is evaluated against a single reference normally done by a human. But c Springer Nature Switzerland AG 2018 I. Batyrshin et al. (Eds.): MICAI 2018, LNAI 11289, pp. 119-131, 2018. https://doi.org/10.1007/978-3-030-04497-8_10 120 C.-E. Gonz alez-Gallardo and J.-M. Torres-Moreno given a transcript, does it exist a unique reference? Or, is it possible that the same transcript could be segmented in five different ways by five different people in the same conditions? If so, which one is correct; and more important, how to fairly evaluate the automatically segmented transcript? These questions are the foundations of Window-based Sentence Boundary Evaluation (WiSeBE), a new semi-supervised metric for evaluating SBD systems based on multi-reference (dis)agreement. The rest of this article is organized as follows. In Sect. 2 we set the frame of SBD and how it is normally evaluated. WiSeBE is formally described in Sect. 3, followed by a multi-reference evaluation in Sect. 4. Further analysis of WiSeBE and discussion over the method and alternative multi-reference evaluation is 

 Corps = 2 Sentence Boundary Detection Sentence Boundary Detection (SBD) has been a major research topic science ASR moved to more general domains as conversational speech [17,24,26]. Per- formance of ASR systems has improved over the years with the inclusion and combination of new Deep Neural Networks methods [5,9,33]. As a general rule, the output of ASR systems lacks of any syntactic information such as capital- ization and sentence boundaries, showing the interest of ASR systems to obtain the correct sequence of words with almost no concern of the overall structure of the document [8]. Similar to SBD is the Punctuation Marks Disambiguation (PMD) or Sentence Boundary Disambiguation. This task aims to segment a formal written text into well formed sentences based on the existent punctuation marks [11,19,20,29]. In this context a sentence is defined (for English) by the Cambridge Dictionary1 as: "a group of words, usually containing a verb, that expresses a thought in the form of a statement, question, instruction, or exclamation and starts with a capital letter when written". PMD carries certain complications, some given the ambiguity of punctuation marks within a sentence. A period can denote an acronym, an abbreviation, the end of the sentence or a combination of them as in the following example: The U.S. president, Mr. Donald Trump, is meeting with the F.B.I. director Christopher A. Wray next Thursday at 8 p.m. However its difficulties, DPM profits of morphological and lexical information to achieve a correct sentence segmentation. By contrast, segmenting an ASR transcript should be done without any (or almost any) lexical information and a flurry definition of sentence. 1 https://dictionary.cambridge.org/. WiSeBE: Window-Based Sentence Boundary Evaluation 121 The obvious division in spoken language may be considered speaker utter- ances. However, in a normal conversation or even in a monologue, the way ideas are organized differs largely from written text. This differences, added to disflu- encies like revisions, repetitions, restarts, interruptions and hesitations make the definition of a sentence unclear thus complicating the segmentation task [27]. Table 1 exemplifies some of the difficulties that are present when working with spoken language. Table 1. Sentence Boundary Detection example Speech transcript SBD applied to transcript two two women can look out after a kid so bad as a man and a woman can so you can have a you can have a mother and a father that that still don't do right with the kid and you can have to men that can so as long as the love each other as long as they love each other it doesn't matter two // two women can look out after a kid so bad as a man and a woman can // so you can have a // you can have a mother and a father that // that still don't do right with the kid and you can have to men that can // so as long as the love each other // as long as they love each other it doesn't matter// Stolcke and Shriberg [26] considered a set of linguistic structures as segments including the following list: - Complete sentences - Stand-alone sentences - Disfluent sentences aborted in mid-utterance - Interjections - Back-channel responses. In [17], Meteer and Iyer divided speaker utterances into segments, consisting each of a single independent clause. A segment was considered to begin either at the beginning of an utterance, or after the end of the preceding segment. Any dysfluency between the end of the previous segments and the begging of current one was considered part of the current segments. Rott and  Cerva [23] aimed to summarize news delivered orally segmenting the transcripts into "something that is similar to sentences". They used a syntactic analyzer to identify the phrases within the text. A wide study focused in unbalanced data for the SBD task was performed by Liu et al. [15]. During this study they followed the segmentation scheme pro- posed by the Linguistic Data Consortium2 on the Simple Metadata Annotation Specification V5.0 guideline (SimpleMDE V5.0) [27], dividing the transcripts in Semantic Units. 2 https://www.ldc.upenn.edu/. 122 C.-E. Gonz alez-Gallardo and J.-M. Torres-Moreno A Semantic Unit (SU) is considered to be an atomic element of the transcript that manages to express a complete thought or idea on the part of the speaker [27]. Sometimes a SU corresponds to the equivalent of a sentence in written text, but other times (the most part of them) a SU corresponds to a phrase or a single word. SUs seem to be an inclusive conception of a segment, they embrace different previous segment definitions and are flexible enough to deal with the majority of spoken language troubles. For these reasons we will adopt SUs as our segment definition. 2.1 Sentence Boundary Evaluation SBD research has been focused on two different aspects; features and methods. Regarding the features, some work focused on acoustic elements like pauses duration, fundamental frequencies, energy, rate of speech, volume change and speaker turn [10,12,14]. The other kind of features used in SBD are textual or lexical features. They rely on the transcript content to extract features like bag-of-word, POS tags or word embeddings [7,12,16,18,23,26,30]. Mixture of acoustic and lexical features have also been explored [1,13,14,32], which is advantageous when both audio signal and transcript are available. With respect to the methods used for SBD, they mostly rely on statisti- cal/neural machine translation [12,22], language models [8,15,18,26], conditional random fields [16,30] and deep neural networks [3,7,29]. Despite their differences in features and/or methodology, almost all previous cited research share a common element; the evaluation methodology. Metrics as Precision, Recall, F1-score, Classification Error Rate and Slot Error Rate (SER) are used to evaluate the proposed system against one reference. As discussed in Sect. 1, further NLP tasks rely on the result of SBD, meaning that is crucial to have a good segmentation. But comparing the output of a system against a unique reference will provide a reliable score to decide if the system is good or bad? Bohac et al. [1] compared the human ability to punctuate recognized spon- taneous speech. They asked 10 people (correctors) to punctuate about 30 min of ASR transcripts in Czech. For an average of 3,962 words, the punctuation marks placed by correctors varied between 557 and 801; this means a difference of 244 segments for the same transcript. Over all correctors, the absolute consensus for period (.) was only 4.6% caused by the replacement of other punctuation marks as semicolons (;) and exclamation marks (!). These results are understandable if we consider the difficulties presented previously in this section. To our knowledge, the amount of studies that have tried to target the sentence boundary evaluation with a multi-reference approach is very small. In [1], Bohac et al. evaluated the overall punctuation accuracy for Czech in a straightforward multi-reference framework. They considered a period (.) valid if at least five of their 10 correctors agreed on its position. WiSeBE: Window-Based Sentence Boundary Evaluation 123 Kol a r and Lamel [13] considered two independent references to evaluate their system and proposed two approaches. The fist one was to calculate the SER for each of one the two available references and then compute their mean. They found this approach to be very strict because for those boundaries where no agreement between references existed, the system was going to be partially wrong even the fact that it has correctly predicted the boundary. Their second app- roach tried to moderate the number of unjust penalizations. For this case, a classification was considered incorrect only if it didn't match either of the two references. These two examples exemplify the real need and some straightforward solu- tions for multi-reference evaluation metrics. However, we think that it is possible to consider in a more inclusive approach the similarities and differences that mul- tiple references could provide into a sentence boundary evaluation protocol. 3 Window-Based Sentence Boundary Evaluation Window-Based Sentence Boundary Evaluation (WiSeBE) is a semi-automatic multi-reference sentence boundary evaluation protocol which considers the per- formance of a candidate segmentation over a set of segmentation references and the agreement between those references. Let R = {R1 , R2 , ..., Rm } be the set of all available references given a tran- script T = {t1 , t2 , ..., tn }, where tj is the jth word in the transcript; a reference Ri is defined as a binary vector in terms of the existent SU boundaries in T. Ri = {b1 , b2 , ..., bn } (1) where bj = 1 if tj is a boundary 0 otherwise Given a transcript T, the candidate segmentation CT is defined similar to Ri . CT = {b1 , b2 , ..., bn } (2) where bj = 1 if tj is a boundary 0 otherwise 3.1 General Reference and Agreement Ratio A General Reference (RG ) is then constructed to calculate the agreement ratio between all references in. It is defined by the boundary frequencies of each ref- erence Ri  R. RG = {d1 , d2 , ..., dn } (3) where 124 C.-E. Gonz alez-Gallardo and J.-M. Torres-Moreno dj = m i=1 tij tj  T, dj = [0, m] (4) The Agreement Ratio (RGAR ) is needed to get a numerical value of the dis- tribution of SU boundaries over R. A value of RGAR close to 0 means a low agreement between references in R, while RGAR = 1 means a perfect agreement (Ri  R, Ri = Ri+1 |i = 1, ..., m - 1) in R. RGAR = RGP B RGHA (5) In the equation above, RGP B corresponds to the ponderated common boundaries of RG and RGHA to its hypothetical maximum agreement. RGP B = n j=1 dj [dj  2] (6) RGHA = m x dj RG 1 [dj = 0] (7) 3.2 Window-Boundaries Reference In Sect. 2 we discussed about how disfluencies complicate SU segmentation. In a multi-reference environment this causes disagreement between references around a same SU boundary. The way WiSeBE handle disagreements produced by dis- fluencies is with a Window-boundaries Reference (RW ) defined as: RW = {w1 , w2 , ..., wp } (8) where each window wk considers one or more boundaries dj from RG with a window separation limit equal to RWl . wk = {dj , dj+1 , dj+2 , ...} (9) 3.3 W iSeBE WiSeBE is a normalized score dependent of (1) the performance of CT over RW and (2) the agreement between all references in R. It is defined as: WiSeBE = F1RW x RGAR WiSeBE = [0, 1] (10) where F1RW corresponds to the harmonic mean of precision and recall of CT with respect to RW (Eq. 11), while RGAR is the agreement ratio defined in (5). RGAR can be interpreted as a scaling factor; a low value will penalize the overall WiSeBE score given the low agreement between references. By contrast, for a high agreement in R (RGAR  1), WiSeBE  F1RW . WiSeBE: Window-Based Sentence Boundary Evaluation 125 F1RW = 2 x precisionRW x recallRW precisionRW + recallRW (11) precisionRW = bj CT 1 [bj = 1, bj  w w  RW ] bj CT 1 [bj = 1] (12) recallRW = wk RW 1 [wk b b  CT ] p (13) Equations 12 and 13 describe precision and recall of CT with respect to RW . Precision is the number of boundaries bj inside any window wk from RW divided by the total number of boundaries bj in CT . Recall corresponds to the number of windows w with at least one boundary b divided by the number of windows w in RW . 4 Evaluating with W iSeBE To exemplify the WiSeBE score we evaluated and compared the performance of two different SBD systems over a set of YouTube videos in a multi-reference environment. The first system (S1) employs a Convolutional Neural Network to determine if the middle word of a sliding window corresponds to a SU bound- ary or not [6]. The second approach (S2) by contrast, introduces a bidirectional Recurrent Neural Network model with attention mechanism for boundary detec- tion [28]. In a first glance we performed the evaluation of the systems against each one of the references independently. Then, we implemented a multi-reference evaluation with WiSeBE. 4.1 Dataset We focused evaluation over a small but diversified dataset composed by 10 YouTube videos in the English language in the news context. The selected videos cover different topics like technology, human rights, terrorism and politics with a length variation between 2 and 10 min. To encourage the diversity of content format we included newscasts, interviews, reports and round tables. During the transcription phase we opted for a manual transcription process because we observed that using transcripts from an ASR system will difficult in a large degree the manual segmentation process. The number of words per transcript oscilate between 271 and 1,602 with a total number of 8,080. We gave clear instructions to three evaluators (ref1 , ref2 , ref3 ) of how seg- mentation was needed to be perform, including the SU concept and how punctu- ation marks were going to be taken into account. Periods (.), question marks (?), exclamation marks (!) and semicolons (;) were considered SU delimiters (bound- aries) while colons (:) and commas (,) were considered as internal SU marks. The number of segments per transcript and reference can be seen in Table 2. An interesting remark is that ref3 assigns about 43% less boundaries than the mean of the other two references. 126 C.-E. Gonz alez-Gallardo and J.-M. Torres-Moreno Table 2. Manual dataset segmentation Reference v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 Total ref1 38 42 17 11 55 87 109 72 55 16 502 ref2 33 42 16 14 54 98 92 65 51 20 485 ref3 23 20 10 6 39 39 76 30 29 9 281 4.2 Evaluation We ran both systems (S1 & S2) over the manually transcribed videos obtaining the number of boundaries shown in Table 3. In general, it can be seen that S1 predicts 27% more segments than S2. This difference can affect the performance of S1, increasing its probabilities of false positives. Table 3. Automatic dataset segmentation System v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 Total S1 53 38 15 13 54 108 106 70 71 11 539 S2 38 37 12 11 36 92 86 46 53 13 424 Table 4 condenses the performance of both systems evaluated against each one of the references independently. If we focus on F1 scores, performance of both systems varies depending of the reference. For ref1 , S1 was better in 5 occasions with respect of S2; S1 was better in 2 occasions only for ref2 ; S1 overperformed S2 in 3 occasions concerning ref3 and in 4 occasions for mean (bold). Also from Table 4 we can observe that ref1 has a bigger similarity to S1 in 5 occasions compared to other two references, while ref2 is more similar to S2 in 7 transcripts (underline). After computing the mean F1 scores over the transcripts, it can be concluded that in average S2 had a better performance segmenting the dataset compared to S1, obtaining a F1 score equal to 0.510. But... What about the complexity of the dataset? Regardless all references have been considered, nor agreement or disagreement between them has been taken into account. All values related to the WiSeBE score are displayed in Table 5. The Agree- ment Ratio (RGAR ) between references oscillates between 0.525 for v8 and 0.767 for v5 . The lower the RGAR , the bigger the penalization WiSeBE will give to the final score. A good example is S2 for transcript v4 where F1RW reaches a value of 0.800, but after considering RGAR the WiSeBE score falls to 0.462. It is feasible to think that if all references are taken into account at the same time during evaluation (F1RW ), the score will be bigger compared to an average of independent evaluations (F1mean ); however this is not always true. That is the case of S1 in v10, which present a slight decrease for F1RW compared to F1mean . WiSeBE: Window-Based Sentence Boundary Evaluation 127 Table 4. Independent multi-reference evaluation Transcript System ref1 ref2 ref3 Mean P R F1 P R F1 P R F1 P R F1 v1 S1 0.396 0.553 0.462 0.377 0.606 0.465 0.264 0.609 0.368 0.346 0.589 0.432 S2 0.474 0.474 0.474 0.474 0.545 0.507 0.368 0.6087 0.459 0.439 0.543 0.480 v2 S1 0.605 0.548 0.575 0.711 0.643 0.675 0.368 0.700 0.483 0.561 0.630 0.578 S2 0.595 0.524 0.557 0.676 0.595 0.633 0.351 0.650 0.456 0.541 0.590 0.549 v3 S1 0.333 0.294 0.313 0.267 0.250 0.258 0.200 0.300 0.240 0.267 0.281 0.270 S2 0.417 0.294 0.345 0.417 0.313 0.357 0.250 0.300 0.273 0.361 0.302 0.325 v4 S1 0.615 0.571 0.593 0.462 0.545 0.500 0.308 0.667 0.421 0.462 0.595 0.505 S2 0.909 0.714 0.800 0.818 0.818 0.818 0.455 0.833 0.588 0.727 0.789 0.735 v5 S1 0.630 0.618 0.624 0.593 0.593 0.593 0.481 0.667 0.560 0.568 0.626 0.592 S2 0.667 0.436 0.527 0.611 0.407 0.489 0.500 0.462 0.480 0.593 0.435 0.499 v6 S1 0.491 0.541 0.515 0.454 0.563 0.503 0.213 0.590 0.313 0.386 0.565 0.443 S2 0.500 0.469 0.484 0.522 0.552 0.536 0.250 0.590 0.351 0.4234 0.537 0.457 v7 S1 0.594 0.578 0.586 0.462 0.533 0.495 0.406 0.566 0.473 0.487 0.559 0.518 S2 0.663 0.523 0.585 0.558 0.522 0.539 0.465 0.526 0.494 0.562 0.524 0.539 v8 S1 0.443 0.477 0.459 0.514 0.500 0.507 0.229 0.533 0.320 0.395 0.503 0.429 S2 0.609 0.431 0.505 0.652 0.417 0.508 0.370 0.567 0.447 0.543 0.471 0.487 v9 S1 0.437 0.564 0.492 0.451 0.627 0.525 0.254 0.621 0.360 0.380 0.603 0.459 S2 0.623 0.600 0.611 0.585 0.608 0.596 0.321 0.586 0.414 0.509 0.598 0.541 v10 S1 0.818 0.450 0.581 0.818 0.450 0.581 0.455 0.556 0.500 0.697 0.523 0.582 S2 0.692 0.450 0.545 0.615 0.500 0.552 0.308 0.444 0.364 0.538 0.4645 0.487 Mean scores S1 -- 0.520 -- 0.510 -- 0.404 -- 0.481 S2 -- 0.543 -- 0.554 -- 0.433 -- 0.510 An important remark is the behavior of S1 and S2 concerning v6 . If evalu- ated without considering any (dis)agreement between references (F1mean ), S2 

 Conclu = 

 Discu = 

 Ref = 
